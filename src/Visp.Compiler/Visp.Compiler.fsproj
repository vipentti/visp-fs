<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <InvariantGlobalization>true</InvariantGlobalization>
    <FsYaccOutputFolder>Syntax\\FsLexYaccOutput\\</FsYaccOutputFolder>
    <FsLexOutputFolder>Syntax\\FsLexYaccOutput\\</FsLexOutputFolder>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Utilities\range.fs" />
    <Compile Include="Utilities\Writer.fs" />
    <Compile Include="Syntax\Syntax.fs" />
    <Compile Include="Transforms\Helpers.fs" />
    <Compile Include="Transforms\Common.fs" />
    <Compile Include="Transforms\LastExpressionUpdater.fs" />
    <Compile Include="Transforms\QuasiquoteExpander.fs" />
    <Compile Include="Transforms\BuiltinMacroExpander.fs" />
    <Compile Include="Syntax\ParseHelpers.fs" />
    <FsYacc Include="Parser.fsy">
      <OtherFlags>--module Visp.Compiler.SyntaxParser -v</OtherFlags>
      <Link>Syntax\Parser.fsy</Link>
    </FsYacc>
    <FsLex Include="Lexer.fsl">
      <OtherFlags>--unicode</OtherFlags>
      <Link>Syntax\Lexer.fsl</Link>
    </FsLex>

    <None Include="Parser.fsy">
      <Link>Syntax\FsYacc\Parser.fsy</Link>
    </None>

    <None Include="Lexer.fsl">
      <Link>Syntax\FsLex\Lexer.fsl</Link>
    </None>

    <Compile Include="$(FsYaccOutputFolder)Parser.fs" />
    <Compile Include="Syntax\LexHelpers.fs" />
    <Compile Include="$(FsLexOutputFolder)Lexer.fs" />
    <Compile Include="Transforms\SyntaxMacroExpander.fs" />
    <Compile Include="Syntax\SynWriter.fs" />
    <Compile Include="CoreParser.fs" />
    <Compile Include="FsharpGenerator.fs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Visp.Common\Visp.Common.csproj" />
    <ProjectReference Include="..\Visp.Runtime.Library\Visp.Runtime.Library.fsproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="FsLexYacc" Version="11.2.0" />
    <PackageReference Include="TestableIO.System.IO.Abstractions.Wrappers" Version="19.2.87" />
  </ItemGroup>
</Project>
