// Implementation file for parser generated by fsyacc
module Visp.Compiler.SyntaxParser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 2 "Parser.fsy"

// Copyright 2023 Ville Penttinen
// Distributed under the MIT License.
// https://github.com/vipentti/visp-fs/blob/main/LICENSE.md

#nowarn "1182"  // generated code has lots of unused "parseState"

open Visp.Compiler.Syntax
open Visp.Compiler.ParseHelpers
open FSharp.Text.Parsing

// This function is called by the generated parser code. Returning initiates error recovery
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some(fun (ctxt: ParseErrorContext<_>) ->
    raise (SyntaxError(box ctxt, (lhs ctxt.ParseState))))


# 24 "Syntax\\FsLexYaccOutput\\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | SYMBOL of (string)
  | KEYWORD of (string)
  | RAWSTRING of (string)
  | DOT_METHOD of (string)
  | STRING of (string * SynStringKind * ParseHelpers.LexerContinuation)
  | CHAR of (string)
  | MACRO_NAME of (string)
  | PROP_PLUS of (string)
  | DECIMAL of (decimal)
  | INT64 of (int64)
  | INT32 of (int)
  | INLINE
  | THREAD_FIRST
  | THREAD_LAST
  | SYNTAX_MACRO
  | ATOM_KW
  | DEREF_KW
  | WHILE
  | TYPE
  | MEMBER
  | MEMBERFN
  | OVERRIDE
  | MACRO
  | MATCH
  | WHEN
  | CONS
  | CONCAT
  | FN
  | FNSTAR
  | LET
  | LETSTAR
  | MUT
  | SET
  | DOT
  | NEW
  | DOT_BRACKET
  | DOT_PLUS
  | IF_KW
  | BEGIN_KW
  | DO_KW
  | QUOTE_KW
  | UNQUOTE_KW
  | SPLICE_UNQUOTE_KW
  | QUASIQUOTE_KW
  | OPEN
  | MODULE
  | AT
  | DOTDOT
  | BANG_RANGE
  | FOR_IN
  | BANG_LIST
  | BANG_MAP
  | BANG_SET
  | BANG_ARRAY
  | BANG_VEC
  | BANG_TUPLE
  | OP_PLUS
  | OP_MINUS
  | OP_MULT
  | OP_DIV
  | QUOTE_SYM
  | TRUE
  | FALSE
  | NIL
  | COLON
  | COMMA
  | UNIT
  | LBRACE
  | RBRACE
  | HASH_BRACE
  | HASH_PAREN
  | LBRACKET
  | RBRACKET
  | LPAREN
  | RPAREN
  | EOF
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_SYMBOL
    | TOKEN_KEYWORD
    | TOKEN_RAWSTRING
    | TOKEN_DOT_METHOD
    | TOKEN_STRING
    | TOKEN_CHAR
    | TOKEN_MACRO_NAME
    | TOKEN_PROP_PLUS
    | TOKEN_DECIMAL
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INLINE
    | TOKEN_THREAD_FIRST
    | TOKEN_THREAD_LAST
    | TOKEN_SYNTAX_MACRO
    | TOKEN_ATOM_KW
    | TOKEN_DEREF_KW
    | TOKEN_WHILE
    | TOKEN_TYPE
    | TOKEN_MEMBER
    | TOKEN_MEMBERFN
    | TOKEN_OVERRIDE
    | TOKEN_MACRO
    | TOKEN_MATCH
    | TOKEN_WHEN
    | TOKEN_CONS
    | TOKEN_CONCAT
    | TOKEN_FN
    | TOKEN_FNSTAR
    | TOKEN_LET
    | TOKEN_LETSTAR
    | TOKEN_MUT
    | TOKEN_SET
    | TOKEN_DOT
    | TOKEN_NEW
    | TOKEN_DOT_BRACKET
    | TOKEN_DOT_PLUS
    | TOKEN_IF_KW
    | TOKEN_BEGIN_KW
    | TOKEN_DO_KW
    | TOKEN_QUOTE_KW
    | TOKEN_UNQUOTE_KW
    | TOKEN_SPLICE_UNQUOTE_KW
    | TOKEN_QUASIQUOTE_KW
    | TOKEN_OPEN
    | TOKEN_MODULE
    | TOKEN_AT
    | TOKEN_DOTDOT
    | TOKEN_BANG_RANGE
    | TOKEN_FOR_IN
    | TOKEN_BANG_LIST
    | TOKEN_BANG_MAP
    | TOKEN_BANG_SET
    | TOKEN_BANG_ARRAY
    | TOKEN_BANG_VEC
    | TOKEN_BANG_TUPLE
    | TOKEN_OP_PLUS
    | TOKEN_OP_MINUS
    | TOKEN_OP_MULT
    | TOKEN_OP_DIV
    | TOKEN_QUOTE_SYM
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_NIL
    | TOKEN_COLON
    | TOKEN_COMMA
    | TOKEN_UNIT
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_HASH_BRACE
    | TOKEN_HASH_PAREN
    | TOKEN_LBRACKET
    | TOKEN_RBRACKET
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_EOF
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startraw_expr
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_raw_expr
    | NONTERM_prog
    | NONTERM_file_fragments
    | NONTERM_rev_file_fragments
    | NONTERM_file_fragment
    | NONTERM_module_decls
    | NONTERM_rev_module_decls
    | NONTERM_module_decl
    | NONTERM_module_parens
    | NONTERM_module_help
    | NONTERM_expr_list
    | NONTERM_rev_expr_list
    | NONTERM_expr_list_or_empty
    | NONTERM_recover
    | NONTERM_expr
    | NONTERM_lambda_short_expr_list
    | NONTERM_vector_start
    | NONTERM_inside_parens
    | NONTERM_parens_expr_start
    | NONTERM_parens_expr
    | NONTERM_macro_call_expr
    | NONTERM_macro_call
    | NONTERM_syntax_macro_expr
    | NONTERM_syntax_macro
    | NONTERM_macro_cases
    | NONTERM_rev_macro_cases
    | NONTERM_macro_case_start
    | NONTERM_macro_case_pat
    | NONTERM_macro_pat_list
    | NONTERM_rev_macro_pat_list
    | NONTERM_macro_pat
    | NONTERM_macro_body_list
    | NONTERM_rev_macro_body_list
    | NONTERM_macro_body
    | NONTERM_cons_expr
    | NONTERM_concat_expr
    | NONTERM_new_expr
    | NONTERM_threadable_list
    | NONTERM_rev_threadable_list
    | NONTERM_threadable
    | NONTERM_prop_plus
    | NONTERM_dot_expr
    | NONTERM_lparen_or_lbracket
    | NONTERM_rparen_or_rbracket
    | NONTERM_list_expr
    | NONTERM_for_in_expr
    | NONTERM_range_expr
    | NONTERM_if_expr
    | NONTERM_quoted_exprs
    | NONTERM_rev_quoted_exprs
    | NONTERM_quoted_expr
    | NONTERM_value_exprs
    | NONTERM_rev_value_exprs
    | NONTERM_value_expr
    | NONTERM_quasiquoted_exprs
    | NONTERM_rev_quasiquoted_exprs
    | NONTERM_quasiquoted_expr
    | NONTERM_unquote
    | NONTERM_splice_unquote
    | NONTERM_operators
    | NONTERM_operators_not_in_parens
    | NONTERM_set
    | NONTERM_let
    | NONTERM_mut
    | NONTERM_letstar
    | NONTERM_type_expr
    | NONTERM_member_list_start
    | NONTERM_member_list
    | NONTERM_rev_member_list
    | NONTERM_member
    | NONTERM_member_in_parens
    | NONTERM_tok_lparen
    | NONTERM_empty_bindings
    | NONTERM_binding_list_start
    | NONTERM_binding_list
    | NONTERM_rev_binding_list
    | NONTERM_binding
    | NONTERM_name
    | NONTERM_name_in_parens_or_brackets_start
    | NONTERM_name_in_parens_or_brackets
    | NONTERM_empty_name_list
    | NONTERM_name_list_start
    | NONTERM_name_list
    | NONTERM_rev_name_list
    | NONTERM_symbol
    | NONTERM_macro_name
    | NONTERM_dot_method
    | NONTERM_keyword
    | NONTERM_syntype_ident
    | NONTERM_constant
    | NONTERM_rawConstant
    | NONTERM_function_def
    | NONTERM_invalid_function_def
    | NONTERM_macro_def
    | NONTERM_empty_arg_list
    | NONTERM_arg_list_start
    | NONTERM_arg_list
    | NONTERM_rev_arg_list
    | NONTERM_arg
    | NONTERM_arg_in_parens_or_brackets_start
    | NONTERM_arg_in_parens_or_brackets
    | NONTERM_function_call
    | NONTERM_function_call_args
    | NONTERM_empty_call_args
    | NONTERM_match_expr
    | NONTERM_match_list
    | NONTERM_rev_match_list
    | NONTERM_match_start
    | NONTERM_match
    | NONTERM_match_tuple_list
    | NONTERM_rev_match_tuple_list
    | NONTERM_match_pattern

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | SYMBOL _ -> 0 
  | KEYWORD _ -> 1 
  | RAWSTRING _ -> 2 
  | DOT_METHOD _ -> 3 
  | STRING _ -> 4 
  | CHAR _ -> 5 
  | MACRO_NAME _ -> 6 
  | PROP_PLUS _ -> 7 
  | DECIMAL _ -> 8 
  | INT64 _ -> 9 
  | INT32 _ -> 10 
  | INLINE  -> 11 
  | THREAD_FIRST  -> 12 
  | THREAD_LAST  -> 13 
  | SYNTAX_MACRO  -> 14 
  | ATOM_KW  -> 15 
  | DEREF_KW  -> 16 
  | WHILE  -> 17 
  | TYPE  -> 18 
  | MEMBER  -> 19 
  | MEMBERFN  -> 20 
  | OVERRIDE  -> 21 
  | MACRO  -> 22 
  | MATCH  -> 23 
  | WHEN  -> 24 
  | CONS  -> 25 
  | CONCAT  -> 26 
  | FN  -> 27 
  | FNSTAR  -> 28 
  | LET  -> 29 
  | LETSTAR  -> 30 
  | MUT  -> 31 
  | SET  -> 32 
  | DOT  -> 33 
  | NEW  -> 34 
  | DOT_BRACKET  -> 35 
  | DOT_PLUS  -> 36 
  | IF_KW  -> 37 
  | BEGIN_KW  -> 38 
  | DO_KW  -> 39 
  | QUOTE_KW  -> 40 
  | UNQUOTE_KW  -> 41 
  | SPLICE_UNQUOTE_KW  -> 42 
  | QUASIQUOTE_KW  -> 43 
  | OPEN  -> 44 
  | MODULE  -> 45 
  | AT  -> 46 
  | DOTDOT  -> 47 
  | BANG_RANGE  -> 48 
  | FOR_IN  -> 49 
  | BANG_LIST  -> 50 
  | BANG_MAP  -> 51 
  | BANG_SET  -> 52 
  | BANG_ARRAY  -> 53 
  | BANG_VEC  -> 54 
  | BANG_TUPLE  -> 55 
  | OP_PLUS  -> 56 
  | OP_MINUS  -> 57 
  | OP_MULT  -> 58 
  | OP_DIV  -> 59 
  | QUOTE_SYM  -> 60 
  | TRUE  -> 61 
  | FALSE  -> 62 
  | NIL  -> 63 
  | COLON  -> 64 
  | COMMA  -> 65 
  | UNIT  -> 66 
  | LBRACE  -> 67 
  | RBRACE  -> 68 
  | HASH_BRACE  -> 69 
  | HASH_PAREN  -> 70 
  | LBRACKET  -> 71 
  | RBRACKET  -> 72 
  | LPAREN  -> 73 
  | RPAREN  -> 74 
  | EOF  -> 75 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_SYMBOL 
  | 1 -> TOKEN_KEYWORD 
  | 2 -> TOKEN_RAWSTRING 
  | 3 -> TOKEN_DOT_METHOD 
  | 4 -> TOKEN_STRING 
  | 5 -> TOKEN_CHAR 
  | 6 -> TOKEN_MACRO_NAME 
  | 7 -> TOKEN_PROP_PLUS 
  | 8 -> TOKEN_DECIMAL 
  | 9 -> TOKEN_INT64 
  | 10 -> TOKEN_INT32 
  | 11 -> TOKEN_INLINE 
  | 12 -> TOKEN_THREAD_FIRST 
  | 13 -> TOKEN_THREAD_LAST 
  | 14 -> TOKEN_SYNTAX_MACRO 
  | 15 -> TOKEN_ATOM_KW 
  | 16 -> TOKEN_DEREF_KW 
  | 17 -> TOKEN_WHILE 
  | 18 -> TOKEN_TYPE 
  | 19 -> TOKEN_MEMBER 
  | 20 -> TOKEN_MEMBERFN 
  | 21 -> TOKEN_OVERRIDE 
  | 22 -> TOKEN_MACRO 
  | 23 -> TOKEN_MATCH 
  | 24 -> TOKEN_WHEN 
  | 25 -> TOKEN_CONS 
  | 26 -> TOKEN_CONCAT 
  | 27 -> TOKEN_FN 
  | 28 -> TOKEN_FNSTAR 
  | 29 -> TOKEN_LET 
  | 30 -> TOKEN_LETSTAR 
  | 31 -> TOKEN_MUT 
  | 32 -> TOKEN_SET 
  | 33 -> TOKEN_DOT 
  | 34 -> TOKEN_NEW 
  | 35 -> TOKEN_DOT_BRACKET 
  | 36 -> TOKEN_DOT_PLUS 
  | 37 -> TOKEN_IF_KW 
  | 38 -> TOKEN_BEGIN_KW 
  | 39 -> TOKEN_DO_KW 
  | 40 -> TOKEN_QUOTE_KW 
  | 41 -> TOKEN_UNQUOTE_KW 
  | 42 -> TOKEN_SPLICE_UNQUOTE_KW 
  | 43 -> TOKEN_QUASIQUOTE_KW 
  | 44 -> TOKEN_OPEN 
  | 45 -> TOKEN_MODULE 
  | 46 -> TOKEN_AT 
  | 47 -> TOKEN_DOTDOT 
  | 48 -> TOKEN_BANG_RANGE 
  | 49 -> TOKEN_FOR_IN 
  | 50 -> TOKEN_BANG_LIST 
  | 51 -> TOKEN_BANG_MAP 
  | 52 -> TOKEN_BANG_SET 
  | 53 -> TOKEN_BANG_ARRAY 
  | 54 -> TOKEN_BANG_VEC 
  | 55 -> TOKEN_BANG_TUPLE 
  | 56 -> TOKEN_OP_PLUS 
  | 57 -> TOKEN_OP_MINUS 
  | 58 -> TOKEN_OP_MULT 
  | 59 -> TOKEN_OP_DIV 
  | 60 -> TOKEN_QUOTE_SYM 
  | 61 -> TOKEN_TRUE 
  | 62 -> TOKEN_FALSE 
  | 63 -> TOKEN_NIL 
  | 64 -> TOKEN_COLON 
  | 65 -> TOKEN_COMMA 
  | 66 -> TOKEN_UNIT 
  | 67 -> TOKEN_LBRACE 
  | 68 -> TOKEN_RBRACE 
  | 69 -> TOKEN_HASH_BRACE 
  | 70 -> TOKEN_HASH_PAREN 
  | 71 -> TOKEN_LBRACKET 
  | 72 -> TOKEN_RBRACKET 
  | 73 -> TOKEN_LPAREN 
  | 74 -> TOKEN_RPAREN 
  | 75 -> TOKEN_EOF 
  | 78 -> TOKEN_end_of_input
  | 76 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startraw_expr 
    | 1 -> NONTERM__startstart 
    | 2 -> NONTERM_start 
    | 3 -> NONTERM_raw_expr 
    | 4 -> NONTERM_prog 
    | 5 -> NONTERM_file_fragments 
    | 6 -> NONTERM_rev_file_fragments 
    | 7 -> NONTERM_rev_file_fragments 
    | 8 -> NONTERM_file_fragment 
    | 9 -> NONTERM_file_fragment 
    | 10 -> NONTERM_module_decls 
    | 11 -> NONTERM_rev_module_decls 
    | 12 -> NONTERM_rev_module_decls 
    | 13 -> NONTERM_module_decl 
    | 14 -> NONTERM_module_decl 
    | 15 -> NONTERM_module_parens 
    | 16 -> NONTERM_module_help 
    | 17 -> NONTERM_module_help 
    | 18 -> NONTERM_expr_list 
    | 19 -> NONTERM_rev_expr_list 
    | 20 -> NONTERM_rev_expr_list 
    | 21 -> NONTERM_expr_list_or_empty 
    | 22 -> NONTERM_expr_list_or_empty 
    | 23 -> NONTERM_recover 
    | 24 -> NONTERM_recover 
    | 25 -> NONTERM_expr 
    | 26 -> NONTERM_expr 
    | 27 -> NONTERM_expr 
    | 28 -> NONTERM_expr 
    | 29 -> NONTERM_expr 
    | 30 -> NONTERM_expr 
    | 31 -> NONTERM_expr 
    | 32 -> NONTERM_expr 
    | 33 -> NONTERM_expr 
    | 34 -> NONTERM_expr 
    | 35 -> NONTERM_lambda_short_expr_list 
    | 36 -> NONTERM_lambda_short_expr_list 
    | 37 -> NONTERM_lambda_short_expr_list 
    | 38 -> NONTERM_lambda_short_expr_list 
    | 39 -> NONTERM_vector_start 
    | 40 -> NONTERM_vector_start 
    | 41 -> NONTERM_inside_parens 
    | 42 -> NONTERM_inside_parens 
    | 43 -> NONTERM_inside_parens 
    | 44 -> NONTERM_inside_parens 
    | 45 -> NONTERM_parens_expr_start 
    | 46 -> NONTERM_parens_expr 
    | 47 -> NONTERM_parens_expr 
    | 48 -> NONTERM_parens_expr 
    | 49 -> NONTERM_parens_expr 
    | 50 -> NONTERM_parens_expr 
    | 51 -> NONTERM_parens_expr 
    | 52 -> NONTERM_parens_expr 
    | 53 -> NONTERM_parens_expr 
    | 54 -> NONTERM_parens_expr 
    | 55 -> NONTERM_parens_expr 
    | 56 -> NONTERM_parens_expr 
    | 57 -> NONTERM_parens_expr 
    | 58 -> NONTERM_parens_expr 
    | 59 -> NONTERM_parens_expr 
    | 60 -> NONTERM_parens_expr 
    | 61 -> NONTERM_parens_expr 
    | 62 -> NONTERM_parens_expr 
    | 63 -> NONTERM_parens_expr 
    | 64 -> NONTERM_parens_expr 
    | 65 -> NONTERM_parens_expr 
    | 66 -> NONTERM_parens_expr 
    | 67 -> NONTERM_parens_expr 
    | 68 -> NONTERM_parens_expr 
    | 69 -> NONTERM_parens_expr 
    | 70 -> NONTERM_parens_expr 
    | 71 -> NONTERM_parens_expr 
    | 72 -> NONTERM_parens_expr 
    | 73 -> NONTERM_parens_expr 
    | 74 -> NONTERM_parens_expr 
    | 75 -> NONTERM_parens_expr 
    | 76 -> NONTERM_parens_expr 
    | 77 -> NONTERM_parens_expr 
    | 78 -> NONTERM_parens_expr 
    | 79 -> NONTERM_parens_expr 
    | 80 -> NONTERM_parens_expr 
    | 81 -> NONTERM_parens_expr 
    | 82 -> NONTERM_parens_expr 
    | 83 -> NONTERM_parens_expr 
    | 84 -> NONTERM_parens_expr 
    | 85 -> NONTERM_parens_expr 
    | 86 -> NONTERM_macro_call_expr 
    | 87 -> NONTERM_macro_call 
    | 88 -> NONTERM_syntax_macro_expr 
    | 89 -> NONTERM_syntax_macro 
    | 90 -> NONTERM_macro_cases 
    | 91 -> NONTERM_rev_macro_cases 
    | 92 -> NONTERM_rev_macro_cases 
    | 93 -> NONTERM_macro_case_start 
    | 94 -> NONTERM_macro_case_start 
    | 95 -> NONTERM_macro_case_pat 
    | 96 -> NONTERM_macro_case_pat 
    | 97 -> NONTERM_macro_pat_list 
    | 98 -> NONTERM_rev_macro_pat_list 
    | 99 -> NONTERM_rev_macro_pat_list 
    | 100 -> NONTERM_macro_pat 
    | 101 -> NONTERM_macro_pat 
    | 102 -> NONTERM_macro_pat 
    | 103 -> NONTERM_macro_pat 
    | 104 -> NONTERM_macro_body_list 
    | 105 -> NONTERM_rev_macro_body_list 
    | 106 -> NONTERM_rev_macro_body_list 
    | 107 -> NONTERM_macro_body 
    | 108 -> NONTERM_macro_body 
    | 109 -> NONTERM_macro_body 
    | 110 -> NONTERM_macro_body 
    | 111 -> NONTERM_macro_body 
    | 112 -> NONTERM_macro_body 
    | 113 -> NONTERM_macro_body 
    | 114 -> NONTERM_cons_expr 
    | 115 -> NONTERM_cons_expr 
    | 116 -> NONTERM_cons_expr 
    | 117 -> NONTERM_concat_expr 
    | 118 -> NONTERM_concat_expr 
    | 119 -> NONTERM_concat_expr 
    | 120 -> NONTERM_new_expr 
    | 121 -> NONTERM_new_expr 
    | 122 -> NONTERM_threadable_list 
    | 123 -> NONTERM_rev_threadable_list 
    | 124 -> NONTERM_rev_threadable_list 
    | 125 -> NONTERM_threadable 
    | 126 -> NONTERM_threadable 
    | 127 -> NONTERM_threadable 
    | 128 -> NONTERM_threadable 
    | 129 -> NONTERM_prop_plus 
    | 130 -> NONTERM_dot_expr 
    | 131 -> NONTERM_dot_expr 
    | 132 -> NONTERM_dot_expr 
    | 133 -> NONTERM_dot_expr 
    | 134 -> NONTERM_dot_expr 
    | 135 -> NONTERM_dot_expr 
    | 136 -> NONTERM_dot_expr 
    | 137 -> NONTERM_dot_expr 
    | 138 -> NONTERM_dot_expr 
    | 139 -> NONTERM_lparen_or_lbracket 
    | 140 -> NONTERM_lparen_or_lbracket 
    | 141 -> NONTERM_rparen_or_rbracket 
    | 142 -> NONTERM_rparen_or_rbracket 
    | 143 -> NONTERM_list_expr 
    | 144 -> NONTERM_list_expr 
    | 145 -> NONTERM_for_in_expr 
    | 146 -> NONTERM_range_expr 
    | 147 -> NONTERM_range_expr 
    | 148 -> NONTERM_range_expr 
    | 149 -> NONTERM_range_expr 
    | 150 -> NONTERM_if_expr 
    | 151 -> NONTERM_if_expr 
    | 152 -> NONTERM_quoted_exprs 
    | 153 -> NONTERM_rev_quoted_exprs 
    | 154 -> NONTERM_rev_quoted_exprs 
    | 155 -> NONTERM_quoted_expr 
    | 156 -> NONTERM_quoted_expr 
    | 157 -> NONTERM_quoted_expr 
    | 158 -> NONTERM_quoted_expr 
    | 159 -> NONTERM_quoted_expr 
    | 160 -> NONTERM_quoted_expr 
    | 161 -> NONTERM_quoted_expr 
    | 162 -> NONTERM_value_exprs 
    | 163 -> NONTERM_rev_value_exprs 
    | 164 -> NONTERM_rev_value_exprs 
    | 165 -> NONTERM_rev_value_exprs 
    | 166 -> NONTERM_value_expr 
    | 167 -> NONTERM_value_expr 
    | 168 -> NONTERM_value_expr 
    | 169 -> NONTERM_value_expr 
    | 170 -> NONTERM_value_expr 
    | 171 -> NONTERM_value_expr 
    | 172 -> NONTERM_value_expr 
    | 173 -> NONTERM_quasiquoted_exprs 
    | 174 -> NONTERM_rev_quasiquoted_exprs 
    | 175 -> NONTERM_rev_quasiquoted_exprs 
    | 176 -> NONTERM_quasiquoted_expr 
    | 177 -> NONTERM_quasiquoted_expr 
    | 178 -> NONTERM_quasiquoted_expr 
    | 179 -> NONTERM_quasiquoted_expr 
    | 180 -> NONTERM_quasiquoted_expr 
    | 181 -> NONTERM_quasiquoted_expr 
    | 182 -> NONTERM_quasiquoted_expr 
    | 183 -> NONTERM_unquote 
    | 184 -> NONTERM_splice_unquote 
    | 185 -> NONTERM_operators 
    | 186 -> NONTERM_operators_not_in_parens 
    | 187 -> NONTERM_operators_not_in_parens 
    | 188 -> NONTERM_operators_not_in_parens 
    | 189 -> NONTERM_operators_not_in_parens 
    | 190 -> NONTERM_operators_not_in_parens 
    | 191 -> NONTERM_operators_not_in_parens 
    | 192 -> NONTERM_set 
    | 193 -> NONTERM_set 
    | 194 -> NONTERM_set 
    | 195 -> NONTERM_let 
    | 196 -> NONTERM_let 
    | 197 -> NONTERM_let 
    | 198 -> NONTERM_mut 
    | 199 -> NONTERM_mut 
    | 200 -> NONTERM_mut 
    | 201 -> NONTERM_letstar 
    | 202 -> NONTERM_type_expr 
    | 203 -> NONTERM_member_list_start 
    | 204 -> NONTERM_member_list_start 
    | 205 -> NONTERM_member_list 
    | 206 -> NONTERM_rev_member_list 
    | 207 -> NONTERM_rev_member_list 
    | 208 -> NONTERM_member 
    | 209 -> NONTERM_member_in_parens 
    | 210 -> NONTERM_member_in_parens 
    | 211 -> NONTERM_member_in_parens 
    | 212 -> NONTERM_member_in_parens 
    | 213 -> NONTERM_member_in_parens 
    | 214 -> NONTERM_member_in_parens 
    | 215 -> NONTERM_tok_lparen 
    | 216 -> NONTERM_empty_bindings 
    | 217 -> NONTERM_empty_bindings 
    | 218 -> NONTERM_binding_list_start 
    | 219 -> NONTERM_binding_list_start 
    | 220 -> NONTERM_binding_list_start 
    | 221 -> NONTERM_binding_list 
    | 222 -> NONTERM_rev_binding_list 
    | 223 -> NONTERM_rev_binding_list 
    | 224 -> NONTERM_binding 
    | 225 -> NONTERM_name 
    | 226 -> NONTERM_name 
    | 227 -> NONTERM_name_in_parens_or_brackets_start 
    | 228 -> NONTERM_name_in_parens_or_brackets_start 
    | 229 -> NONTERM_name_in_parens_or_brackets 
    | 230 -> NONTERM_name_in_parens_or_brackets 
    | 231 -> NONTERM_empty_name_list 
    | 232 -> NONTERM_empty_name_list 
    | 233 -> NONTERM_name_list_start 
    | 234 -> NONTERM_name_list_start 
    | 235 -> NONTERM_name_list_start 
    | 236 -> NONTERM_name_list 
    | 237 -> NONTERM_rev_name_list 
    | 238 -> NONTERM_rev_name_list 
    | 239 -> NONTERM_symbol 
    | 240 -> NONTERM_macro_name 
    | 241 -> NONTERM_dot_method 
    | 242 -> NONTERM_keyword 
    | 243 -> NONTERM_syntype_ident 
    | 244 -> NONTERM_syntype_ident 
    | 245 -> NONTERM_constant 
    | 246 -> NONTERM_rawConstant 
    | 247 -> NONTERM_rawConstant 
    | 248 -> NONTERM_rawConstant 
    | 249 -> NONTERM_rawConstant 
    | 250 -> NONTERM_rawConstant 
    | 251 -> NONTERM_rawConstant 
    | 252 -> NONTERM_rawConstant 
    | 253 -> NONTERM_rawConstant 
    | 254 -> NONTERM_rawConstant 
    | 255 -> NONTERM_function_def 
    | 256 -> NONTERM_function_def 
    | 257 -> NONTERM_function_def 
    | 258 -> NONTERM_function_def 
    | 259 -> NONTERM_function_def 
    | 260 -> NONTERM_invalid_function_def 
    | 261 -> NONTERM_invalid_function_def 
    | 262 -> NONTERM_invalid_function_def 
    | 263 -> NONTERM_invalid_function_def 
    | 264 -> NONTERM_invalid_function_def 
    | 265 -> NONTERM_macro_def 
    | 266 -> NONTERM_empty_arg_list 
    | 267 -> NONTERM_empty_arg_list 
    | 268 -> NONTERM_arg_list_start 
    | 269 -> NONTERM_arg_list_start 
    | 270 -> NONTERM_arg_list_start 
    | 271 -> NONTERM_arg_list_start 
    | 272 -> NONTERM_arg_list_start 
    | 273 -> NONTERM_arg_list 
    | 274 -> NONTERM_rev_arg_list 
    | 275 -> NONTERM_rev_arg_list 
    | 276 -> NONTERM_arg 
    | 277 -> NONTERM_arg 
    | 278 -> NONTERM_arg_in_parens_or_brackets_start 
    | 279 -> NONTERM_arg_in_parens_or_brackets_start 
    | 280 -> NONTERM_arg_in_parens_or_brackets 
    | 281 -> NONTERM_arg_in_parens_or_brackets 
    | 282 -> NONTERM_function_call 
    | 283 -> NONTERM_function_call 
    | 284 -> NONTERM_function_call_args 
    | 285 -> NONTERM_function_call_args 
    | 286 -> NONTERM_empty_call_args 
    | 287 -> NONTERM_match_expr 
    | 288 -> NONTERM_match_expr 
    | 289 -> NONTERM_match_expr 
    | 290 -> NONTERM_match_list 
    | 291 -> NONTERM_rev_match_list 
    | 292 -> NONTERM_rev_match_list 
    | 293 -> NONTERM_match_start 
    | 294 -> NONTERM_match_start 
    | 295 -> NONTERM_match 
    | 296 -> NONTERM_match 
    | 297 -> NONTERM_match_tuple_list 
    | 298 -> NONTERM_rev_match_tuple_list 
    | 299 -> NONTERM_rev_match_tuple_list 
    | 300 -> NONTERM_rev_match_tuple_list 
    | 301 -> NONTERM_rev_match_tuple_list 
    | 302 -> NONTERM_match_pattern 
    | 303 -> NONTERM_match_pattern 
    | 304 -> NONTERM_match_pattern 
    | 305 -> NONTERM_match_pattern 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 78 
let _fsyacc_tagOfErrorTerminal = 76

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | SYMBOL _ -> "SYMBOL" 
  | KEYWORD _ -> "KEYWORD" 
  | RAWSTRING _ -> "RAWSTRING" 
  | DOT_METHOD _ -> "DOT_METHOD" 
  | STRING _ -> "STRING" 
  | CHAR _ -> "CHAR" 
  | MACRO_NAME _ -> "MACRO_NAME" 
  | PROP_PLUS _ -> "PROP_PLUS" 
  | DECIMAL _ -> "DECIMAL" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INLINE  -> "INLINE" 
  | THREAD_FIRST  -> "THREAD_FIRST" 
  | THREAD_LAST  -> "THREAD_LAST" 
  | SYNTAX_MACRO  -> "SYNTAX_MACRO" 
  | ATOM_KW  -> "ATOM_KW" 
  | DEREF_KW  -> "DEREF_KW" 
  | WHILE  -> "WHILE" 
  | TYPE  -> "TYPE" 
  | MEMBER  -> "MEMBER" 
  | MEMBERFN  -> "MEMBERFN" 
  | OVERRIDE  -> "OVERRIDE" 
  | MACRO  -> "MACRO" 
  | MATCH  -> "MATCH" 
  | WHEN  -> "WHEN" 
  | CONS  -> "CONS" 
  | CONCAT  -> "CONCAT" 
  | FN  -> "FN" 
  | FNSTAR  -> "FNSTAR" 
  | LET  -> "LET" 
  | LETSTAR  -> "LETSTAR" 
  | MUT  -> "MUT" 
  | SET  -> "SET" 
  | DOT  -> "DOT" 
  | NEW  -> "NEW" 
  | DOT_BRACKET  -> "DOT_BRACKET" 
  | DOT_PLUS  -> "DOT_PLUS" 
  | IF_KW  -> "IF_KW" 
  | BEGIN_KW  -> "BEGIN_KW" 
  | DO_KW  -> "DO_KW" 
  | QUOTE_KW  -> "QUOTE_KW" 
  | UNQUOTE_KW  -> "UNQUOTE_KW" 
  | SPLICE_UNQUOTE_KW  -> "SPLICE_UNQUOTE_KW" 
  | QUASIQUOTE_KW  -> "QUASIQUOTE_KW" 
  | OPEN  -> "OPEN" 
  | MODULE  -> "MODULE" 
  | AT  -> "AT" 
  | DOTDOT  -> "DOTDOT" 
  | BANG_RANGE  -> "BANG_RANGE" 
  | FOR_IN  -> "FOR_IN" 
  | BANG_LIST  -> "BANG_LIST" 
  | BANG_MAP  -> "BANG_MAP" 
  | BANG_SET  -> "BANG_SET" 
  | BANG_ARRAY  -> "BANG_ARRAY" 
  | BANG_VEC  -> "BANG_VEC" 
  | BANG_TUPLE  -> "BANG_TUPLE" 
  | OP_PLUS  -> "OP_PLUS" 
  | OP_MINUS  -> "OP_MINUS" 
  | OP_MULT  -> "OP_MULT" 
  | OP_DIV  -> "OP_DIV" 
  | QUOTE_SYM  -> "QUOTE_SYM" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | NIL  -> "NIL" 
  | COLON  -> "COLON" 
  | COMMA  -> "COMMA" 
  | UNIT  -> "UNIT" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | HASH_BRACE  -> "HASH_BRACE" 
  | HASH_PAREN  -> "HASH_PAREN" 
  | LBRACKET  -> "LBRACKET" 
  | RBRACKET  -> "RBRACKET" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | EOF  -> "EOF" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | SYMBOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RAWSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DOT_METHOD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | MACRO_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PROP_PLUS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INLINE  -> (null : System.Object) 
  | THREAD_FIRST  -> (null : System.Object) 
  | THREAD_LAST  -> (null : System.Object) 
  | SYNTAX_MACRO  -> (null : System.Object) 
  | ATOM_KW  -> (null : System.Object) 
  | DEREF_KW  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | MEMBERFN  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | MACRO  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | CONS  -> (null : System.Object) 
  | CONCAT  -> (null : System.Object) 
  | FN  -> (null : System.Object) 
  | FNSTAR  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | LETSTAR  -> (null : System.Object) 
  | MUT  -> (null : System.Object) 
  | SET  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | DOT_BRACKET  -> (null : System.Object) 
  | DOT_PLUS  -> (null : System.Object) 
  | IF_KW  -> (null : System.Object) 
  | BEGIN_KW  -> (null : System.Object) 
  | DO_KW  -> (null : System.Object) 
  | QUOTE_KW  -> (null : System.Object) 
  | UNQUOTE_KW  -> (null : System.Object) 
  | SPLICE_UNQUOTE_KW  -> (null : System.Object) 
  | QUASIQUOTE_KW  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | AT  -> (null : System.Object) 
  | DOTDOT  -> (null : System.Object) 
  | BANG_RANGE  -> (null : System.Object) 
  | FOR_IN  -> (null : System.Object) 
  | BANG_LIST  -> (null : System.Object) 
  | BANG_MAP  -> (null : System.Object) 
  | BANG_SET  -> (null : System.Object) 
  | BANG_ARRAY  -> (null : System.Object) 
  | BANG_VEC  -> (null : System.Object) 
  | BANG_TUPLE  -> (null : System.Object) 
  | OP_PLUS  -> (null : System.Object) 
  | OP_MINUS  -> (null : System.Object) 
  | OP_MULT  -> (null : System.Object) 
  | OP_DIV  -> (null : System.Object) 
  | QUOTE_SYM  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | NIL  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | UNIT  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | HASH_BRACE  -> (null : System.Object) 
  | HASH_PAREN  -> (null : System.Object) 
  | LBRACKET  -> (null : System.Object) 
  | RBRACKET  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
let _fsyacc_gotos = [| 0us;65535us;0us;65535us;1us;65535us;2us;3us;1us;65535us;0us;1us;1us;65535us;2us;4us;1us;65535us;2us;6us;1us;65535us;2us;7us;2us;65535us;2us;8us;7us;9us;3us;65535us;2us;10us;7us;10us;24us;25us;3us;65535us;2us;13us;7us;13us;24us;13us;4us;65535us;2us;14us;7us;14us;13us;15us;24us;14us;4us;65535us;2us;16us;7us;16us;13us;16us;24us;16us;1us;65535us;18us;19us;34us;65535us;39us;29us;42us;29us;54us;56us;66us;420us;92us;93us;94us;95us;102us;103us;104us;105us;108us;109us;110us;111us;112us;113us;114us;115us;116us;117us;178us;179us;200us;201us;204us;209us;216us;217us;222us;223us;274us;276us;275us;277us;278us;279us;280us;281us;292us;293us;313us;314us;317us;318us;324us;325us;382us;383us;386us;387us;388us;389us;391us;392us;396us;397us;419us;420us;431us;432us;435us;436us;34us;65535us;39us;26us;42us;26us;54us;26us;66us;26us;92us;26us;94us;26us;102us;26us;104us;26us;108us;26us;110us;26us;112us;26us;114us;26us;116us;26us;178us;26us;200us;26us;204us;26us;216us;26us;222us;26us;274us;26us;275us;26us;278us;26us;280us;26us;292us;26us;313us;26us;317us;26us;324us;26us;382us;26us;386us;26us;388us;26us;391us;26us;396us;26us;419us;26us;431us;26us;435us;26us;2us;65535us;39us;40us;42us;43us;12us;65535us;18us;64us;58us;64us;59us;64us;312us;404us;316us;404us;323us;404us;380us;404us;381us;404us;385us;404us;390us;404us;395us;404us;400us;403us;84us;65535us;0us;5us;2us;17us;7us;17us;13us;17us;18us;66us;24us;17us;26us;28us;35us;36us;39us;27us;42us;27us;45us;419us;54us;27us;58us;66us;59us;66us;66us;27us;67us;68us;92us;27us;94us;27us;97us;98us;99us;100us;101us;102us;102us;27us;104us;27us;106us;188us;108us;27us;110us;27us;112us;27us;114us;27us;116us;27us;171us;172us;172us;173us;174us;175us;175us;176us;178us;27us;180us;188us;185us;186us;190us;191us;192us;193us;195us;196us;197us;198us;199us;200us;200us;27us;202us;203us;204us;27us;206us;207us;216us;27us;220us;221us;222us;27us;224us;225us;225us;230us;226us;227us;228us;229us;230us;231us;232us;233us;233us;234us;234us;235us;266us;267us;269us;270us;274us;27us;275us;27us;278us;27us;280us;27us;282us;283us;283us;284us;286us;287us;289us;290us;292us;27us;306us;307us;309us;310us;313us;27us;317us;27us;320us;321us;324us;27us;338us;339us;382us;27us;386us;27us;388us;27us;391us;27us;396us;27us;419us;27us;421us;422us;431us;27us;433us;434us;435us;27us;1us;65535us;45us;46us;84us;65535us;0us;48us;2us;48us;7us;48us;13us;48us;18us;48us;24us;48us;26us;48us;35us;48us;39us;48us;42us;48us;45us;48us;54us;48us;58us;48us;59us;48us;66us;48us;67us;48us;92us;48us;94us;48us;97us;48us;99us;48us;101us;48us;102us;48us;104us;48us;106us;48us;108us;48us;110us;48us;112us;48us;114us;48us;116us;48us;171us;48us;172us;48us;174us;48us;175us;48us;178us;48us;180us;48us;185us;48us;190us;48us;192us;48us;195us;48us;197us;48us;199us;48us;200us;48us;202us;48us;204us;48us;206us;48us;216us;48us;220us;48us;222us;48us;224us;48us;225us;48us;226us;48us;228us;48us;230us;48us;232us;48us;233us;48us;234us;48us;266us;48us;269us;48us;274us;48us;275us;48us;278us;48us;280us;48us;282us;48us;283us;48us;286us;48us;289us;48us;292us;48us;306us;48us;309us;48us;313us;48us;317us;48us;320us;48us;324us;48us;338us;48us;382us;48us;386us;48us;388us;48us;391us;48us;396us;48us;419us;48us;421us;48us;431us;48us;433us;48us;435us;48us;84us;65535us;0us;49us;2us;49us;7us;49us;13us;49us;18us;49us;24us;49us;26us;49us;35us;49us;39us;49us;42us;49us;45us;49us;54us;49us;58us;49us;59us;49us;66us;49us;67us;49us;92us;49us;94us;49us;97us;49us;99us;49us;101us;49us;102us;49us;104us;49us;106us;49us;108us;49us;110us;49us;112us;49us;114us;49us;116us;49us;171us;49us;172us;49us;174us;49us;175us;49us;178us;49us;180us;49us;185us;49us;190us;49us;192us;49us;195us;49us;197us;49us;199us;49us;200us;49us;202us;49us;204us;49us;206us;49us;216us;49us;220us;49us;222us;49us;224us;49us;225us;49us;226us;49us;228us;49us;230us;49us;232us;49us;233us;49us;234us;49us;266us;49us;269us;49us;274us;49us;275us;49us;278us;49us;280us;49us;282us;49us;283us;49us;286us;49us;289us;49us;292us;49us;306us;49us;309us;49us;313us;49us;317us;49us;320us;49us;324us;49us;338us;49us;382us;49us;386us;49us;388us;49us;391us;49us;396us;49us;419us;49us;421us;49us;431us;49us;433us;49us;435us;49us;3us;65535us;18us;61us;58us;61us;59us;61us;3us;65535us;18us;65us;58us;65us;59us;65us;3us;65535us;18us;87us;58us;87us;59us;87us;3us;65535us;18us;118us;58us;118us;59us;118us;3us;65535us;18us;86us;58us;86us;59us;86us;3us;65535us;18us;121us;58us;121us;59us;121us;1us;65535us;123us;124us;1us;65535us;123us;125us;2us;65535us;123us;126us;125us;127us;2us;65535us;128us;129us;132us;133us;4us;65535us;136us;137us;139us;140us;146us;147us;149us;150us;4us;65535us;136us;142us;139us;142us;146us;142us;149us;142us;5us;65535us;136us;143us;139us;143us;142us;144us;146us;143us;149us;143us;5us;65535us;119us;120us;157us;158us;160us;161us;163us;164us;166us;167us;5us;65535us;119us;153us;157us;153us;160us;153us;163us;153us;166us;153us;8us;65535us;119us;154us;129us;130us;133us;134us;153us;155us;157us;154us;160us;154us;163us;154us;166us;154us;3us;65535us;18us;83us;58us;83us;59us;83us;3us;65535us;18us;84us;58us;84us;59us;84us;4us;65535us;18us;82us;45us;53us;58us;82us;59us;82us;1us;65535us;106us;107us;1us;65535us;106us;180us;2us;65535us;106us;181us;180us;182us;7us;65535us;18us;197us;45us;197us;58us;197us;59us;197us;106us;183us;180us;183us;203us;205us;4us;65535us;18us;96us;45us;52us;58us;96us;59us;96us;11us;65535us;218us;219us;312us;400us;316us;400us;323us;400us;380us;400us;381us;400us;385us;400us;390us;400us;395us;400us;422us;427us;424us;427us;4us;65535us;221us;222us;401us;402us;427us;430us;428us;429us;3us;65535us;18us;80us;58us;80us;59us;80us;3us;65535us;18us;78us;58us;78us;59us;78us;3us;65535us;18us;79us;58us;79us;59us;79us;3us;65535us;18us;76us;58us;76us;59us;76us;4us;65535us;242us;243us;245us;246us;248us;249us;251us;252us;4us;65535us;242us;236us;245us;236us;248us;236us;251us;236us;7us;65535us;37us;38us;88us;89us;236us;238us;242us;237us;245us;237us;248us;237us;251us;237us;0us;65535us;0us;65535us;0us;65535us;1us;65535us;263us;264us;1us;65535us;263us;254us;3us;65535us;90us;91us;254us;256us;263us;255us;3us;65535us;90us;261us;254us;261us;263us;261us;3us;65535us;90us;262us;254us;262us;263us;262us;3us;65535us;90us;260us;254us;260us;263us;260us;5us;65535us;18us;85us;45us;50us;58us;85us;59us;85us;263us;272us;3us;65535us;18us;75us;58us;75us;59us;75us;3us;65535us;18us;72us;58us;72us;59us;72us;3us;65535us;18us;74us;58us;74us;59us;74us;3us;65535us;18us;73us;58us;73us;59us;73us;3us;65535us;18us;77us;58us;77us;59us;77us;1us;65535us;296us;297us;1us;65535us;296us;298us;1us;65535us;296us;299us;2us;65535us;296us;300us;299us;301us;1us;65535us;302us;303us;0us;65535us;1us;65535us;291us;330us;1us;65535us;291us;292us;2us;65535us;326us;331us;328us;333us;2us;65535us;326us;335us;328us;335us;3us;65535us;326us;336us;328us;336us;335us;337us;10us;65535us;219us;220us;285us;286us;288us;289us;305us;306us;326us;338us;328us;338us;335us;338us;351us;361us;353us;361us;360us;362us;10us;65535us;219us;341us;285us;341us;288us;341us;305us;341us;326us;341us;328us;341us;335us;341us;351us;341us;353us;341us;360us;341us;2us;65535us;342us;343us;345us;346us;1us;65535us;295us;355us;1us;65535us;295us;296us;2us;65535us;351us;356us;353us;358us;2us;65535us;351us;360us;353us;360us;143us;65535us;0us;33us;2us;33us;7us;33us;13us;33us;18us;33us;21us;22us;23us;24us;24us;33us;26us;33us;35us;33us;37us;240us;39us;33us;42us;33us;45us;33us;54us;33us;58us;33us;59us;33us;66us;33us;67us;33us;88us;240us;90us;258us;92us;33us;94us;33us;97us;33us;99us;33us;101us;33us;102us;33us;104us;33us;106us;33us;108us;33us;110us;33us;112us;33us;114us;33us;116us;33us;119us;170us;122us;123us;129us;170us;133us;170us;136us;152us;139us;152us;142us;152us;146us;152us;149us;152us;153us;170us;157us;170us;160us;170us;163us;170us;166us;170us;171us;33us;172us;33us;174us;33us;175us;33us;178us;33us;180us;33us;185us;33us;190us;33us;192us;33us;194us;195us;195us;33us;197us;33us;199us;33us;200us;33us;202us;33us;203us;204us;204us;33us;206us;33us;216us;33us;219us;340us;220us;33us;222us;33us;224us;33us;225us;33us;226us;33us;228us;33us;230us;33us;232us;33us;233us;33us;234us;33us;236us;240us;242us;240us;245us;240us;248us;240us;251us;240us;254us;258us;263us;258us;266us;33us;269us;33us;274us;33us;275us;33us;278us;33us;280us;33us;282us;33us;283us;33us;285us;340us;286us;33us;288us;340us;289us;33us;292us;33us;294us;295us;305us;340us;306us;33us;308us;309us;309us;33us;311us;312us;313us;33us;315us;316us;317us;33us;319us;320us;320us;33us;322us;323us;324us;33us;326us;340us;328us;340us;335us;340us;338us;33us;342us;348us;345us;348us;351us;340us;353us;340us;360us;340us;380us;381us;382us;33us;384us;385us;386us;33us;388us;33us;391us;33us;394us;395us;396us;33us;400us;408us;405us;408us;410us;416us;413us;416us;419us;33us;421us;33us;427us;445us;431us;33us;433us;33us;435us;33us;437us;445us;439us;445us;441us;445us;446us;445us;447us;445us;3us;65535us;18us;119us;58us;119us;59us;119us;6us;65535us;18us;199us;45us;199us;58us;199us;59us;199us;106us;184us;180us;184us;102us;65535us;0us;34us;2us;34us;7us;34us;13us;34us;18us;34us;24us;34us;26us;34us;35us;34us;37us;241us;39us;34us;42us;34us;45us;34us;54us;34us;58us;34us;59us;34us;66us;34us;67us;34us;88us;241us;90us;259us;92us;34us;94us;34us;97us;34us;99us;34us;101us;34us;102us;34us;104us;34us;106us;34us;108us;34us;110us;34us;112us;34us;114us;34us;116us;34us;119us;169us;129us;169us;133us;169us;153us;169us;157us;169us;160us;169us;163us;169us;166us;169us;171us;34us;172us;34us;174us;34us;175us;34us;178us;34us;180us;34us;185us;34us;190us;34us;192us;34us;195us;34us;197us;34us;199us;34us;200us;34us;202us;34us;204us;34us;206us;34us;216us;34us;220us;34us;222us;34us;224us;34us;225us;34us;226us;34us;228us;34us;230us;34us;232us;34us;233us;34us;234us;34us;236us;241us;242us;241us;245us;241us;248us;241us;251us;241us;254us;259us;263us;259us;266us;34us;269us;34us;274us;34us;275us;34us;278us;34us;280us;34us;282us;34us;283us;34us;286us;34us;289us;34us;292us;34us;306us;34us;309us;34us;313us;34us;317us;34us;320us;34us;324us;34us;338us;34us;382us;34us;386us;34us;388us;34us;391us;34us;396us;34us;419us;34us;421us;34us;431us;34us;433us;34us;435us;34us;3us;65535us;177us;178us;349us;350us;417us;418us;113us;65535us;0us;32us;2us;32us;7us;32us;13us;32us;18us;32us;24us;32us;26us;32us;35us;32us;37us;239us;39us;32us;42us;32us;45us;32us;54us;32us;58us;32us;59us;32us;66us;32us;67us;32us;88us;239us;90us;257us;92us;32us;94us;32us;97us;32us;99us;32us;101us;32us;102us;32us;104us;32us;106us;32us;108us;32us;110us;32us;112us;32us;114us;32us;116us;32us;119us;156us;129us;156us;133us;156us;136us;145us;139us;145us;142us;145us;146us;145us;149us;145us;153us;156us;157us;156us;160us;156us;163us;156us;166us;156us;171us;32us;172us;32us;174us;32us;175us;32us;178us;32us;180us;32us;185us;32us;190us;32us;192us;32us;195us;32us;197us;32us;199us;32us;200us;32us;202us;32us;204us;32us;206us;32us;216us;32us;220us;32us;222us;32us;224us;32us;225us;32us;226us;32us;228us;32us;230us;32us;232us;32us;233us;32us;234us;32us;236us;239us;242us;239us;245us;239us;248us;239us;251us;239us;254us;257us;263us;257us;266us;32us;269us;32us;274us;32us;275us;32us;278us;32us;280us;32us;282us;32us;283us;32us;286us;32us;289us;32us;292us;32us;306us;32us;309us;32us;313us;32us;317us;32us;320us;32us;324us;32us;338us;32us;382us;32us;386us;32us;388us;32us;391us;32us;396us;32us;419us;32us;421us;32us;427us;444us;431us;32us;433us;32us;435us;32us;437us;444us;439us;444us;441us;444us;446us;444us;447us;444us;113us;65535us;0us;370us;2us;370us;7us;370us;13us;370us;18us;370us;24us;370us;26us;370us;35us;370us;37us;370us;39us;370us;42us;370us;45us;370us;54us;370us;58us;370us;59us;370us;66us;370us;67us;370us;88us;370us;90us;370us;92us;370us;94us;370us;97us;370us;99us;370us;101us;370us;102us;370us;104us;370us;106us;370us;108us;370us;110us;370us;112us;370us;114us;370us;116us;370us;119us;370us;129us;370us;133us;370us;136us;370us;139us;370us;142us;370us;146us;370us;149us;370us;153us;370us;157us;370us;160us;370us;163us;370us;166us;370us;171us;370us;172us;370us;174us;370us;175us;370us;178us;370us;180us;370us;185us;370us;190us;370us;192us;370us;195us;370us;197us;370us;199us;370us;200us;370us;202us;370us;204us;370us;206us;370us;216us;370us;220us;370us;222us;370us;224us;370us;225us;370us;226us;370us;228us;370us;230us;370us;232us;370us;233us;370us;234us;370us;236us;370us;242us;370us;245us;370us;248us;370us;251us;370us;254us;370us;263us;370us;266us;370us;269us;370us;274us;370us;275us;370us;278us;370us;280us;370us;282us;370us;283us;370us;286us;370us;289us;370us;292us;370us;306us;370us;309us;370us;313us;370us;317us;370us;320us;370us;324us;370us;338us;370us;382us;370us;386us;370us;388us;370us;391us;370us;396us;370us;419us;370us;421us;370us;427us;370us;431us;370us;433us;370us;435us;370us;437us;370us;439us;370us;441us;370us;446us;370us;447us;370us;3us;65535us;18us;69us;58us;69us;59us;69us;3us;65535us;18us;393us;58us;393us;59us;393us;3us;65535us;18us;70us;58us;70us;59us;70us;0us;65535us;8us;65535us;312us;313us;316us;317us;323us;324us;380us;388us;381us;382us;385us;386us;390us;391us;395us;396us;1us;65535us;400us;401us;1us;65535us;400us;405us;2us;65535us;400us;406us;405us;407us;2us;65535us;400us;409us;405us;409us;2us;65535us;410us;411us;413us;414us;4us;65535us;18us;71us;45us;51us;58us;71us;59us;71us;0us;65535us;0us;65535us;3us;65535us;18us;81us;58us;81us;59us;81us;1us;65535us;422us;423us;1us;65535us;422us;424us;2us;65535us;422us;425us;424us;426us;1us;65535us;427us;428us;2us;65535us;446us;450us;447us;448us;2us;65535us;446us;437us;447us;437us;6us;65535us;427us;431us;437us;443us;439us;440us;441us;442us;446us;438us;447us;438us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;2us;4us;6us;8us;10us;12us;15us;19us;23us;28us;33us;35us;70us;105us;108us;121us;206us;208us;293us;378us;382us;386us;390us;394us;398us;402us;404us;406us;409us;412us;417us;422us;428us;434us;440us;449us;453us;457us;462us;464us;466us;469us;477us;482us;494us;499us;503us;507us;511us;515us;520us;525us;533us;534us;535us;536us;538us;540us;544us;548us;552us;556us;562us;566us;570us;574us;578us;582us;584us;586us;588us;591us;593us;594us;596us;598us;601us;604us;608us;619us;630us;633us;635us;637us;640us;643us;787us;791us;798us;901us;905us;1019us;1133us;1137us;1141us;1145us;1146us;1155us;1157us;1159us;1162us;1165us;1168us;1173us;1174us;1175us;1179us;1181us;1183us;1186us;1188us;1191us;1194us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;2us;1us;3us;1us;4us;2us;5us;7us;1us;6us;1us;7us;1us;8us;1us;9us;1us;9us;2us;10us;12us;1us;11us;1us;12us;1us;13us;1us;14us;5us;15us;41us;42us;43us;44us;1us;15us;1us;15us;1us;16us;1us;16us;1us;17us;1us;17us;1us;17us;2us;18us;20us;1us;19us;1us;20us;1us;22us;1us;23us;1us;24us;1us;25us;1us;26us;1us;27us;1us;28us;1us;28us;1us;29us;1us;29us;1us;30us;1us;30us;1us;30us;1us;31us;1us;31us;1us;31us;1us;32us;1us;32us;1us;32us;1us;33us;1us;34us;1us;35us;1us;36us;1us;37us;1us;38us;2us;39us;40us;1us;39us;1us;40us;1us;40us;4us;41us;42us;43us;44us;5us;41us;42us;43us;44us;296us;1us;41us;2us;42us;43us;1us;42us;1us;43us;1us;44us;1us;45us;3us;46us;282us;283us;1us;46us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;55us;1us;56us;1us;57us;1us;58us;1us;59us;1us;60us;1us;61us;1us;62us;1us;63us;1us;64us;1us;65us;1us;66us;1us;66us;1us;67us;1us;67us;1us;68us;1us;68us;1us;69us;1us;69us;1us;70us;1us;71us;1us;71us;1us;72us;1us;72us;1us;73us;1us;73us;1us;73us;1us;74us;1us;74us;1us;75us;1us;75us;2us;76us;77us;1us;77us;2us;78us;79us;1us;79us;2us;80us;81us;1us;81us;2us;82us;83us;1us;83us;2us;84us;85us;1us;85us;1us;86us;1us;87us;1us;87us;1us;88us;1us;89us;1us;89us;1us;89us;2us;90us;92us;1us;91us;1us;92us;1us;93us;1us;93us;1us;93us;1us;93us;1us;94us;1us;94us;1us;94us;1us;94us;1us;95us;1us;95us;1us;95us;1us;96us;1us;96us;1us;96us;2us;97us;99us;1us;98us;1us;99us;1us;100us;1us;101us;1us;101us;1us;101us;1us;102us;1us;102us;1us;102us;1us;103us;2us;104us;106us;1us;105us;1us;106us;1us;107us;1us;108us;1us;108us;1us;108us;1us;109us;1us;109us;1us;109us;1us;110us;1us;110us;1us;110us;1us;111us;1us;111us;1us;111us;1us;112us;1us;113us;3us;114us;115us;116us;2us;114us;115us;1us;114us;3us;117us;118us;119us;2us;117us;118us;1us;117us;2us;120us;121us;2us;120us;121us;1us;121us;2us;122us;124us;1us;123us;1us;124us;1us;125us;1us;126us;1us;127us;1us;127us;1us;127us;1us;128us;1us;129us;1us;130us;1us;130us;1us;130us;1us;130us;1us;131us;1us;131us;1us;131us;1us;132us;1us;132us;2us;133us;134us;2us;133us;134us;1us;133us;4us;135us;136us;137us;138us;4us;135us;136us;137us;138us;2us;135us;138us;1us;136us;1us;137us;1us;137us;1us;137us;1us;138us;1us;139us;2us;139us;268us;1us;140us;2us;140us;269us;1us;141us;1us;142us;2us;143us;144us;1us;144us;1us;145us;1us;145us;1us;145us;1us;145us;1us;145us;1us;145us;4us;146us;147us;148us;149us;4us;146us;147us;148us;149us;2us;146us;148us;2us;146us;148us;1us;146us;1us;146us;2us;147us;149us;1us;147us;2us;150us;151us;2us;150us;151us;2us;150us;151us;1us;151us;2us;152us;154us;1us;153us;1us;154us;1us;155us;1us;156us;1us;157us;1us;158us;1us;158us;1us;158us;1us;159us;1us;159us;1us;159us;1us;160us;1us;160us;1us;160us;1us;161us;1us;161us;1us;161us;2us;173us;175us;1us;174us;1us;175us;1us;176us;1us;177us;1us;178us;1us;179us;1us;180us;1us;181us;4us;182us;183us;184us;185us;1us;182us;1us;182us;1us;183us;1us;183us;1us;183us;1us;184us;1us;184us;1us;184us;1us;185us;1us;185us;2us;186us;188us;2us;187us;189us;1us;188us;1us;189us;1us;190us;1us;190us;1us;191us;1us;191us;3us;192us;193us;194us;2us;192us;193us;1us;192us;3us;195us;196us;197us;2us;195us;196us;1us;195us;3us;198us;199us;200us;2us;198us;199us;1us;198us;1us;201us;1us;201us;1us;201us;1us;202us;1us;202us;1us;202us;1us;202us;1us;204us;2us;205us;207us;1us;206us;1us;207us;1us;208us;1us;208us;1us;208us;1us;209us;1us;209us;1us;209us;2us;210us;212us;1us;210us;1us;210us;1us;211us;1us;211us;1us;211us;1us;211us;1us;212us;1us;212us;1us;212us;1us;212us;2us;213us;214us;1us;213us;1us;213us;1us;214us;1us;214us;1us;214us;1us;214us;2us;216us;219us;1us;216us;2us;217us;220us;1us;217us;1us;218us;1us;219us;1us;219us;1us;220us;1us;220us;2us;221us;223us;1us;222us;1us;223us;1us;224us;1us;224us;1us;225us;1us;226us;1us;227us;1us;227us;1us;227us;1us;228us;1us;228us;1us;228us;2us;229us;230us;1us;229us;1us;229us;2us;231us;234us;1us;231us;2us;232us;235us;1us;232us;1us;233us;1us;234us;1us;234us;1us;235us;1us;235us;2us;236us;238us;1us;237us;1us;238us;1us;239us;1us;240us;1us;241us;1us;242us;1us;243us;1us;244us;1us;244us;1us;245us;1us;246us;1us;247us;1us;248us;1us;249us;1us;250us;1us;251us;1us;252us;1us;253us;1us;254us;8us;255us;256us;257us;260us;261us;262us;263us;264us;3us;255us;261us;263us;2us;255us;263us;1us;255us;2us;256us;264us;2us;256us;264us;2us;256us;264us;1us;256us;2us;257us;262us;1us;257us;1us;258us;1us;258us;1us;258us;1us;259us;1us;265us;1us;265us;1us;265us;1us;265us;1us;268us;1us;269us;2us;270us;271us;1us;270us;1us;270us;1us;271us;1us;272us;2us;273us;275us;1us;274us;1us;275us;1us;276us;1us;277us;1us;278us;1us;278us;1us;278us;1us;279us;1us;279us;1us;279us;2us;280us;281us;1us;280us;1us;280us;2us;282us;283us;1us;282us;3us;287us;288us;289us;2us;287us;288us;1us;287us;2us;290us;292us;1us;291us;1us;292us;2us;293us;294us;1us;293us;1us;293us;1us;294us;2us;295us;296us;1us;295us;1us;296us;1us;296us;1us;296us;1us;296us;4us;297us;299us;300us;301us;1us;298us;1us;299us;1us;299us;1us;300us;1us;300us;1us;301us;1us;302us;1us;303us;2us;304us;305us;1us;304us;1us;304us;1us;304us;1us;305us;1us;305us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;17us;19us;21us;23us;25us;27us;30us;32us;34us;36us;38us;44us;46us;48us;50us;52us;54us;56us;58us;61us;63us;65us;67us;69us;71us;73us;75us;77us;79us;81us;83us;85us;87us;89us;91us;93us;95us;97us;99us;101us;103us;105us;107us;109us;111us;113us;115us;118us;120us;122us;124us;129us;135us;137us;140us;142us;144us;146us;148us;152us;154us;156us;158us;160us;162us;164us;166us;168us;170us;172us;174us;176us;178us;180us;182us;184us;186us;188us;190us;192us;194us;196us;198us;200us;202us;204us;206us;208us;210us;212us;214us;216us;218us;220us;222us;224us;226us;228us;230us;232us;234us;237us;239us;242us;244us;247us;249us;252us;254us;257us;259us;261us;263us;265us;267us;269us;271us;273us;276us;278us;280us;282us;284us;286us;288us;290us;292us;294us;296us;298us;300us;302us;304us;306us;308us;311us;313us;315us;317us;319us;321us;323us;325us;327us;329us;331us;334us;336us;338us;340us;342us;344us;346us;348us;350us;352us;354us;356us;358us;360us;362us;364us;366us;368us;372us;375us;377us;381us;384us;386us;389us;392us;394us;397us;399us;401us;403us;405us;407us;409us;411us;413us;415us;417us;419us;421us;423us;425us;427us;429us;431us;433us;436us;439us;441us;446us;451us;454us;456us;458us;460us;462us;464us;466us;469us;471us;474us;476us;478us;481us;483us;485us;487us;489us;491us;493us;495us;500us;505us;508us;511us;513us;515us;518us;520us;523us;526us;529us;531us;534us;536us;538us;540us;542us;544us;546us;548us;550us;552us;554us;556us;558us;560us;562us;564us;566us;568us;571us;573us;575us;577us;579us;581us;583us;585us;587us;592us;594us;596us;598us;600us;602us;604us;606us;608us;610us;612us;615us;618us;620us;622us;624us;626us;628us;630us;634us;637us;639us;643us;646us;648us;652us;655us;657us;659us;661us;663us;665us;667us;669us;671us;673us;676us;678us;680us;682us;684us;686us;688us;690us;692us;695us;697us;699us;701us;703us;705us;707us;709us;711us;713us;715us;718us;720us;722us;724us;726us;728us;730us;733us;735us;738us;740us;742us;744us;746us;748us;750us;753us;755us;757us;759us;761us;763us;765us;767us;769us;771us;773us;775us;777us;780us;782us;784us;787us;789us;792us;794us;796us;798us;800us;802us;804us;807us;809us;811us;813us;815us;817us;819us;821us;823us;825us;827us;829us;831us;833us;835us;837us;839us;841us;843us;845us;854us;858us;861us;863us;866us;869us;872us;874us;877us;879us;881us;883us;885us;887us;889us;891us;893us;895us;897us;899us;902us;904us;906us;908us;910us;913us;915us;917us;919us;921us;923us;925us;927us;929us;931us;933us;936us;938us;940us;943us;945us;949us;952us;954us;957us;959us;961us;964us;966us;968us;970us;973us;975us;977us;979us;981us;983us;988us;990us;992us;994us;996us;998us;1000us;1002us;1004us;1007us;1009us;1011us;1013us;1015us;|]
let _fsyacc_action_rows = 452
let _fsyacc_actionTableElements = [|18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;49152us;19us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;18us;76us;11us;0us;49152us;0us;16386us;0us;16387us;0us;16388us;19us;16389us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;18us;76us;11us;0us;16390us;0us;16391us;0us;16392us;1us;32768us;75us;12us;0us;16393us;18us;16394us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;18us;0us;16395us;0us;16396us;0us;16397us;0us;16398us;64us;32768us;0us;363us;1us;366us;3us;365us;4us;371us;5us;379us;6us;364us;7us;189us;8us;372us;9us;374us;10us;373us;12us;104us;13us;106us;14us;122us;15us;97us;16us;99us;17us;101us;18us;294us;22us;394us;23us;421us;25us;171us;26us;174us;27us;380us;28us;390us;29us;285us;30us;291us;31us;288us;32us;282us;33us;202us;34us;177us;35us;190us;36us;194us;37us;232us;38us;92us;39us;94us;40us;88us;43us;90us;44us;21us;45us;23us;46us;35us;48us;224us;49us;218us;50us;216us;51us;110us;52us;112us;53us;114us;54us;116us;55us;108us;56us;274us;57us;278us;58us;275us;59us;280us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;74us;60us;75us;31us;76us;30us;1us;32768us;74us;20us;0us;16399us;1us;32768us;0us;363us;0us;16400us;1us;32768us;0us;363us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;18us;0us;16401us;18us;16402us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16403us;0us;16404us;0us;16406us;0us;16407us;0us;16408us;0us;16409us;0us;16410us;0us;16411us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16412us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;248us;69us;251us;71us;245us;73us;242us;0us;16413us;18us;16405us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;68us;41us;0us;16414us;18us;16405us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;68us;44us;0us;16415us;28us;32768us;0us;363us;1us;366us;3us;365us;4us;371us;5us;379us;7us;189us;8us;372us;9us;374us;10us;373us;33us;202us;34us;177us;35us;190us;36us;194us;46us;35us;56us;274us;57us;278us;58us;275us;59us;280us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;74us;47us;0us;16416us;0us;16417us;0us;16418us;0us;16419us;0us;16420us;0us;16421us;0us;16422us;19us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;72us;55us;73us;58us;0us;16423us;1us;32768us;72us;57us;0us;16424us;62us;32768us;0us;363us;1us;366us;3us;365us;4us;371us;5us;379us;6us;364us;7us;189us;8us;372us;9us;374us;10us;373us;12us;104us;13us;106us;14us;122us;15us;97us;16us;99us;17us;101us;18us;294us;22us;394us;23us;421us;25us;171us;26us;174us;27us;380us;28us;390us;29us;285us;30us;291us;31us;288us;32us;282us;33us;202us;34us;177us;35us;190us;36us;194us;37us;232us;38us;92us;39us;94us;40us;88us;43us;90us;46us;35us;48us;224us;49us;218us;50us;216us;51us;110us;52us;112us;53us;114us;54us;116us;55us;108us;56us;274us;57us;278us;58us;275us;59us;280us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;74us;60us;75us;31us;76us;30us;63us;32768us;0us;363us;1us;366us;3us;365us;4us;371us;5us;379us;6us;364us;7us;189us;8us;372us;9us;374us;10us;373us;12us;104us;13us;106us;14us;122us;15us;97us;16us;99us;17us;101us;18us;294us;22us;394us;23us;421us;24us;433us;25us;171us;26us;174us;27us;380us;28us;390us;29us;285us;30us;291us;31us;288us;32us;282us;33us;202us;34us;177us;35us;190us;36us;194us;37us;232us;38us;92us;39us;94us;40us;88us;43us;90us;46us;35us;48us;224us;49us;218us;50us;216us;51us;110us;52us;112us;53us;114us;54us;116us;55us;108us;56us;274us;57us;278us;58us;275us;59us;280us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;74us;60us;75us;31us;76us;30us;0us;16425us;2us;32768us;74us;62us;75us;63us;0us;16426us;0us;16427us;0us;16428us;0us;16429us;19us;16667us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;33us;67us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16430us;0us;16431us;0us;16432us;0us;16433us;0us;16434us;0us;16435us;0us;16436us;0us;16437us;0us;16438us;0us;16439us;0us;16440us;0us;16441us;0us;16442us;0us;16443us;0us;16444us;0us;16445us;0us;16446us;0us;16447us;0us;16448us;0us;16449us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;248us;69us;251us;71us;245us;73us;242us;0us;16450us;12us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;73us;263us;0us;16451us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16452us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16453us;0us;16454us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16455us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16456us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16457us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16458us;21us;32768us;0us;363us;1us;366us;3us;365us;4us;371us;5us;379us;7us;189us;8us;372us;9us;374us;10us;373us;35us;185us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16459us;18us;16460us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16461us;18us;16462us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16463us;18us;16464us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16465us;18us;16466us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16467us;18us;16468us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16469us;0us;16470us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;163us;69us;166us;71us;160us;73us;157us;0us;16471us;0us;16472us;1us;32768us;0us;363us;2us;32768us;71us;132us;73us;128us;0us;16473us;2us;16474us;71us;132us;73us;128us;0us;16475us;0us;16476us;2us;32768us;71us;139us;73us;136us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;163us;69us;166us;71us;160us;73us;157us;1us;32768us;74us;131us;0us;16477us;2us;32768us;71us;139us;73us;136us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;163us;69us;166us;71us;160us;73us;157us;1us;32768us;72us;135us;0us;16478us;12us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;71us;149us;73us;146us;1us;32768us;74us;138us;0us;16479us;12us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;71us;149us;73us;146us;1us;32768us;72us;141us;0us;16480us;12us;16481us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;71us;149us;73us;146us;0us;16482us;0us;16483us;0us;16484us;12us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;71us;149us;73us;146us;1us;32768us;74us;148us;0us;16485us;12us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;71us;149us;73us;146us;1us;32768us;72us;151us;0us;16486us;0us;16487us;15us;16488us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;163us;69us;166us;71us;160us;73us;157us;0us;16489us;0us;16490us;0us;16491us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;163us;69us;166us;71us;160us;73us;157us;1us;32768us;74us;159us;0us;16492us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;163us;69us;166us;71us;160us;73us;157us;1us;32768us;72us;162us;0us;16493us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;163us;69us;166us;71us;160us;73us;157us;1us;32768us;68us;165us;0us;16494us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;163us;69us;166us;71us;160us;73us;157us;1us;32768us;68us;168us;0us;16495us;0us;16496us;0us;16497us;18us;16500us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;16499us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16498us;18us;16503us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;16502us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16501us;2us;32768us;0us;367us;60us;368us;18us;16504us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16505us;21us;16506us;0us;363us;1us;366us;3us;365us;4us;371us;5us;379us;7us;189us;8us;372us;9us;374us;10us;373us;35us;185us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16507us;0us;16508us;0us;16509us;0us;16510us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;72us;187us;0us;16511us;0us;16512us;0us;16513us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;72us;192us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16514us;1us;32768us;0us;363us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16515us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16516us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;16518us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16517us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;3us;32768us;0us;363us;7us;189us;35us;206us;18us;16519us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16520us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;72us;208us;0us;16521us;0us;16522us;0us;16523us;1us;16523us;74us;398us;0us;16524us;1us;16524us;72us;399us;0us;16525us;0us;16526us;18us;16527us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16528us;2us;32768us;71us;212us;73us;210us;3us;32768us;0us;363us;71us;345us;73us;342us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;2us;32768us;72us;215us;74us;214us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16529us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;19us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;47us;226us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;16532us;47us;228us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16530us;18us;16533us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16531us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;16534us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16535us;15us;16536us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;248us;69us;251us;71us;245us;73us;242us;0us;16537us;0us;16538us;0us;16539us;0us;16540us;0us;16541us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;248us;69us;251us;71us;245us;73us;242us;1us;32768us;74us;244us;0us;16542us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;248us;69us;251us;71us;245us;73us;242us;1us;32768us;72us;247us;0us;16543us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;248us;69us;251us;71us;245us;73us;242us;1us;32768us;68us;250us;0us;16544us;15us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;67us;248us;69us;251us;71us;245us;73us;242us;1us;32768us;68us;253us;0us;16545us;12us;16557us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;73us;263us;0us;16558us;0us;16559us;0us;16560us;0us;16561us;0us;16562us;0us;16563us;0us;16564us;0us;16565us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;41us;266us;42us;269us;56us;274us;57us;278us;58us;275us;59us;280us;61us;375us;62us;376us;63us;377us;66us;378us;73us;263us;1us;32768us;74us;265us;0us;16566us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;74us;268us;0us;16567us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;74us;271us;0us;16568us;1us;32768us;74us;273us;0us;16569us;18us;16570us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;16571us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16572us;0us;16573us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16574us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16575us;18us;16578us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;18us;16577us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16576us;3us;16581us;0us;363us;71us;345us;73us;342us;18us;16580us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16579us;3us;16584us;0us;363us;71us;345us;73us;342us;18us;16583us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16582us;2us;32768us;71us;328us;73us;326us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16585us;1us;32768us;0us;363us;2us;32768us;71us;353us;73us;351us;1us;16587us;73us;302us;0us;16586us;0us;16588us;1us;16589us;73us;302us;0us;16590us;0us;16591us;4us;32768us;19us;308us;20us;311us;21us;319us;29us;305us;1us;32768us;74us;304us;0us;16592us;3us;32768us;0us;363us;71us;345us;73us;342us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16593us;2us;32768us;0us;363us;27us;315us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16594us;1us;32768us;0us;363us;4us;32768us;71us;213us;73us;211us;75us;31us;76us;30us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16595us;1us;32768us;0us;363us;4us;32768us;71us;213us;73us;211us;75us;31us;76us;30us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16596us;2us;32768us;0us;363us;27us;322us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16597us;1us;32768us;0us;363us;4us;32768us;71us;213us;73us;211us;75us;31us;76us;30us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16598us;4us;32768us;0us;363us;71us;345us;73us;342us;74us;327us;0us;16600us;4us;32768us;0us;363us;71us;345us;72us;329us;73us;342us;0us;16601us;0us;16602us;1us;32768us;74us;332us;0us;16603us;1us;32768us;72us;334us;0us;16604us;3us;16605us;0us;363us;71us;345us;73us;342us;0us;16606us;0us;16607us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16608us;0us;16609us;0us;16610us;1us;32768us;0us;363us;1us;32768us;74us;344us;0us;16611us;1us;32768us;0us;363us;1us;32768us;72us;347us;0us;16612us;1us;16614us;64us;349us;2us;32768us;0us;367us;60us;368us;0us;16613us;4us;32768us;0us;363us;71us;345us;73us;342us;74us;352us;0us;16615us;4us;32768us;0us;363us;71us;345us;72us;354us;73us;342us;0us;16616us;0us;16617us;1us;32768us;74us;357us;0us;16618us;1us;32768us;72us;359us;0us;16619us;3us;16620us;0us;363us;71us;345us;73us;342us;0us;16621us;0us;16622us;0us;16623us;0us;16624us;0us;16625us;0us;16626us;0us;16627us;1us;32768us;0us;369us;0us;16628us;0us;16629us;0us;16630us;0us;16631us;0us;16632us;0us;16633us;0us;16634us;0us;16635us;0us;16636us;0us;16637us;0us;16638us;6us;16644us;0us;363us;11us;384us;71us;213us;73us;211us;75us;31us;76us;30us;4us;16645us;71us;213us;73us;211us;75us;31us;76us;30us;18us;16647us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16639us;1us;32768us;0us;363us;4us;32768us;71us;213us;73us;211us;75us;31us;76us;30us;18us;16648us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16640us;18us;16646us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16641us;4us;32768us;71us;213us;73us;211us;75us;31us;76us;30us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16642us;0us;16643us;1us;32768us;0us;363us;4us;32768us;71us;213us;73us;211us;75us;31us;76us;30us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16649us;0us;16652us;0us;16653us;5us;32768us;0us;363us;71us;413us;73us;410us;75us;31us;76us;30us;2us;32768us;72us;215us;74us;214us;0us;16654us;0us;16655us;0us;16656us;3us;16657us;0us;363us;71us;413us;73us;410us;0us;16658us;0us;16659us;0us;16660us;0us;16661us;1us;32768us;0us;363us;1us;32768us;74us;412us;0us;16662us;1us;32768us;0us;363us;1us;32768us;72us;415us;0us;16663us;1us;16665us;64us;417us;2us;32768us;0us;367us;60us;368us;0us;16664us;18us;16667us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16666us;18us;16673us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;2us;16672us;71us;212us;73us;210us;0us;16671us;2us;16674us;71us;212us;73us;210us;0us;16675us;0us;16676us;13us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;72us;215us;73us;446us;74us;214us;2us;32768us;72us;215us;74us;214us;0us;16677us;0us;16678us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;59us;0us;16679us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;1us;32768us;74us;435us;18us;32768us;0us;363us;1us;366us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;46us;35us;60us;37us;61us;375us;62us;376us;63us;377us;66us;378us;67us;39us;69us;42us;70us;45us;71us;54us;73us;58us;0us;16680us;13us;16681us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;33us;441us;61us;375us;62us;376us;63us;377us;65us;439us;66us;378us;73us;446us;0us;16682us;11us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;73us;446us;0us;16683us;11us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;73us;446us;0us;16684us;0us;16685us;0us;16686us;0us;16687us;12us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;55us;447us;61us;375us;62us;376us;63us;377us;66us;378us;73us;446us;11us;32768us;0us;363us;4us;371us;5us;379us;8us;372us;9us;374us;10us;373us;61us;375us;62us;376us;63us;377us;66us;378us;73us;446us;1us;32768us;74us;449us;0us;16688us;1us;32768us;74us;451us;0us;16689us;|]
let _fsyacc_actionTableRowOffsets = [|0us;19us;20us;40us;41us;42us;43us;44us;64us;65us;66us;67us;69us;70us;89us;90us;91us;92us;93us;158us;160us;161us;163us;164us;166us;185us;186us;205us;206us;207us;208us;209us;210us;211us;212us;213us;232us;233us;249us;250us;269us;271us;272us;291us;293us;294us;323us;325us;326us;327us;328us;329us;330us;331us;332us;352us;353us;355us;356us;419us;483us;484us;487us;488us;489us;490us;491us;511us;530us;531us;532us;533us;534us;535us;536us;537us;538us;539us;540us;541us;542us;543us;544us;545us;546us;547us;548us;549us;550us;566us;567us;580us;581us;600us;601us;620us;621us;622us;641us;642us;661us;662us;681us;700us;701us;720us;721us;743us;744us;763us;764us;783us;784us;803us;804us;823us;824us;843us;844us;845us;861us;862us;863us;865us;868us;869us;872us;873us;874us;877us;893us;895us;896us;899us;915us;917us;918us;931us;933us;934us;947us;949us;950us;963us;964us;965us;966us;979us;981us;982us;995us;997us;998us;999us;1015us;1016us;1017us;1018us;1034us;1036us;1037us;1053us;1055us;1056us;1072us;1074us;1075us;1091us;1093us;1094us;1095us;1096us;1115us;1134us;1135us;1154us;1173us;1174us;1177us;1196us;1197us;1219us;1220us;1221us;1222us;1223us;1242us;1244us;1245us;1246us;1247us;1266us;1268us;1287us;1288us;1290us;1309us;1310us;1329us;1330us;1349us;1368us;1369us;1388us;1392us;1411us;1412us;1431us;1433us;1434us;1435us;1436us;1438us;1439us;1441us;1442us;1443us;1462us;1463us;1466us;1470us;1489us;1492us;1511us;1512us;1531us;1551us;1570us;1572us;1591us;1592us;1611us;1612us;1631us;1650us;1669us;1670us;1686us;1687us;1688us;1689us;1690us;1691us;1707us;1709us;1710us;1726us;1728us;1729us;1745us;1747us;1748us;1764us;1766us;1767us;1780us;1781us;1782us;1783us;1784us;1785us;1786us;1787us;1788us;1807us;1809us;1810us;1829us;1831us;1832us;1851us;1853us;1854us;1856us;1857us;1876us;1895us;1896us;1897us;1916us;1917us;1936us;1937us;1956us;1975us;1976us;1980us;1999us;2000us;2004us;2023us;2024us;2027us;2046us;2047us;2049us;2052us;2054us;2055us;2056us;2058us;2059us;2060us;2065us;2067us;2068us;2072us;2091us;2092us;2095us;2114us;2115us;2117us;2122us;2141us;2142us;2144us;2149us;2168us;2169us;2172us;2191us;2192us;2194us;2199us;2218us;2219us;2224us;2225us;2230us;2231us;2232us;2234us;2235us;2237us;2238us;2242us;2243us;2244us;2263us;2264us;2265us;2266us;2268us;2270us;2271us;2273us;2275us;2276us;2278us;2281us;2282us;2287us;2288us;2293us;2294us;2295us;2297us;2298us;2300us;2301us;2305us;2306us;2307us;2308us;2309us;2310us;2311us;2312us;2314us;2315us;2316us;2317us;2318us;2319us;2320us;2321us;2322us;2323us;2324us;2325us;2332us;2337us;2356us;2357us;2359us;2364us;2383us;2384us;2403us;2404us;2409us;2428us;2429us;2430us;2432us;2437us;2456us;2457us;2458us;2459us;2465us;2468us;2469us;2470us;2471us;2475us;2476us;2477us;2478us;2479us;2481us;2483us;2484us;2486us;2488us;2489us;2491us;2494us;2495us;2514us;2515us;2534us;2537us;2538us;2541us;2542us;2543us;2557us;2560us;2561us;2562us;2581us;2582us;2601us;2603us;2622us;2623us;2637us;2638us;2650us;2651us;2663us;2664us;2665us;2666us;2667us;2680us;2692us;2694us;2695us;2697us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;1us;1us;1us;1us;1us;2us;1us;2us;1us;1us;2us;1us;1us;3us;2us;3us;1us;1us;2us;0us;1us;1us;1us;1us;1us;1us;2us;2us;3us;3us;3us;1us;1us;1us;1us;1us;1us;2us;3us;2us;3us;3us;2us;1us;3us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;2us;2us;2us;2us;1us;2us;2us;3us;2us;2us;1us;2us;1us;2us;1us;2us;1us;2us;1us;2us;1us;2us;1us;3us;1us;1us;2us;4us;4us;3us;3us;1us;1us;2us;1us;3us;3us;1us;1us;1us;2us;1us;3us;3us;3us;3us;1us;1us;3us;2us;1us;3us;2us;1us;2us;3us;1us;1us;2us;1us;1us;3us;1us;1us;4us;3us;2us;3us;2us;3us;3us;5us;4us;1us;1us;1us;1us;1us;2us;6us;6us;4us;4us;3us;3us;4us;1us;1us;2us;1us;1us;1us;3us;3us;3us;3us;1us;0us;1us;2us;1us;1us;1us;3us;3us;3us;3us;1us;1us;2us;1us;1us;1us;1us;1us;1us;3us;4us;4us;3us;1us;1us;2us;2us;2us;2us;3us;2us;1us;3us;2us;1us;3us;2us;1us;3us;4us;0us;1us;1us;1us;2us;3us;3us;3us;4us;5us;3us;5us;1us;2us;2us;1us;3us;3us;1us;1us;2us;2us;1us;1us;3us;3us;3us;1us;2us;2us;1us;3us;3us;1us;1us;2us;1us;1us;1us;1us;1us;2us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;4us;5us;3us;3us;1us;1us;2us;2us;3us;4us;4us;2us;2us;2us;2us;3us;2us;1us;1us;1us;2us;1us;1us;3us;3us;3us;1us;2us;1us;1us;1us;0us;3us;2us;1us;1us;1us;2us;3us;2us;2us;6us;1us;1us;3us;3us;2us;1us;1us;4us;3us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;3us;4us;5us;6us;6us;7us;7us;8us;9us;9us;10us;10us;11us;12us;12us;13us;14us;14us;15us;15us;16us;16us;17us;17us;17us;17us;17us;17us;17us;17us;17us;17us;18us;18us;18us;18us;19us;19us;20us;20us;20us;20us;21us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;22us;23us;24us;25us;26us;27us;28us;28us;29us;29us;30us;30us;31us;32us;32us;33us;33us;33us;33us;34us;35us;35us;36us;36us;36us;36us;36us;36us;36us;37us;37us;37us;38us;38us;38us;39us;39us;40us;41us;41us;42us;42us;42us;42us;43us;44us;44us;44us;44us;44us;44us;44us;44us;44us;45us;45us;46us;46us;47us;47us;48us;49us;49us;49us;49us;50us;50us;51us;52us;52us;53us;53us;53us;53us;53us;53us;53us;54us;55us;55us;55us;56us;56us;56us;56us;56us;56us;56us;57us;58us;58us;59us;59us;59us;59us;59us;59us;59us;60us;61us;62us;63us;63us;63us;63us;63us;63us;64us;64us;64us;65us;65us;65us;66us;66us;66us;67us;68us;69us;69us;70us;71us;71us;72us;73us;73us;73us;73us;73us;73us;74us;75us;75us;76us;76us;76us;77us;78us;78us;79us;80us;80us;81us;81us;82us;82us;83us;83us;84us;84us;84us;85us;86us;86us;87us;88us;89us;90us;91us;91us;92us;93us;93us;93us;93us;93us;93us;93us;93us;93us;94us;94us;94us;94us;94us;95us;95us;95us;95us;95us;96us;97us;97us;98us;98us;98us;98us;98us;99us;100us;100us;101us;101us;102us;102us;103us;103us;104us;104us;105us;105us;106us;107us;107us;107us;108us;109us;109us;110us;110us;111us;111us;112us;113us;113us;113us;113us;114us;114us;114us;114us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;49152us;16386us;16387us;16388us;65535us;16390us;16391us;16392us;65535us;16393us;65535us;16395us;16396us;16397us;16398us;65535us;65535us;16399us;65535us;16400us;65535us;65535us;16401us;65535us;16403us;16404us;16406us;16407us;16408us;16409us;16410us;16411us;65535us;16412us;65535us;16413us;65535us;65535us;16414us;65535us;65535us;16415us;65535us;65535us;16416us;16417us;16418us;16419us;16420us;16421us;16422us;65535us;16423us;65535us;16424us;65535us;65535us;16425us;65535us;16426us;16427us;16428us;16429us;65535us;65535us;16430us;16431us;16432us;16433us;16434us;16435us;16436us;16437us;16438us;16439us;16440us;16441us;16442us;16443us;16444us;16445us;16446us;16447us;16448us;16449us;65535us;16450us;65535us;16451us;65535us;16452us;65535us;16453us;16454us;65535us;16455us;65535us;16456us;65535us;65535us;16457us;65535us;16458us;65535us;16459us;65535us;16461us;65535us;16463us;65535us;16465us;65535us;16467us;65535us;16469us;16470us;65535us;16471us;16472us;65535us;65535us;16473us;65535us;16475us;16476us;65535us;65535us;65535us;16477us;65535us;65535us;65535us;16478us;65535us;65535us;16479us;65535us;65535us;16480us;65535us;16482us;16483us;16484us;65535us;65535us;16485us;65535us;65535us;16486us;16487us;65535us;16489us;16490us;16491us;65535us;65535us;16492us;65535us;65535us;16493us;65535us;65535us;16494us;65535us;65535us;16495us;16496us;16497us;65535us;65535us;16498us;65535us;65535us;16501us;65535us;65535us;16505us;65535us;16507us;16508us;16509us;16510us;65535us;65535us;16511us;16512us;16513us;65535us;65535us;65535us;16514us;65535us;65535us;16515us;65535us;16516us;65535us;65535us;16517us;65535us;65535us;65535us;16520us;65535us;65535us;16521us;16522us;16523us;65535us;16524us;65535us;16525us;16526us;65535us;16528us;65535us;65535us;65535us;65535us;65535us;16529us;65535us;65535us;65535us;65535us;65535us;16530us;65535us;16531us;65535us;65535us;65535us;16535us;65535us;16537us;16538us;16539us;16540us;16541us;65535us;65535us;16542us;65535us;65535us;16543us;65535us;65535us;16544us;65535us;65535us;16545us;65535us;16558us;16559us;16560us;16561us;16562us;16563us;16564us;16565us;65535us;65535us;16566us;65535us;65535us;16567us;65535us;65535us;16568us;65535us;16569us;65535us;65535us;16572us;16573us;65535us;16574us;65535us;16575us;65535us;65535us;16576us;65535us;65535us;16579us;65535us;65535us;16582us;65535us;65535us;16585us;65535us;65535us;65535us;16586us;16588us;65535us;16590us;16591us;65535us;65535us;16592us;65535us;65535us;16593us;65535us;65535us;16594us;65535us;65535us;65535us;16595us;65535us;65535us;65535us;16596us;65535us;65535us;16597us;65535us;65535us;65535us;16598us;65535us;16600us;65535us;16601us;16602us;65535us;16603us;65535us;16604us;65535us;16606us;16607us;65535us;16608us;16609us;16610us;65535us;65535us;16611us;65535us;65535us;16612us;65535us;65535us;16613us;65535us;16615us;65535us;16616us;16617us;65535us;16618us;65535us;16619us;65535us;16621us;16622us;16623us;16624us;16625us;16626us;16627us;65535us;16628us;16629us;16630us;16631us;16632us;16633us;16634us;16635us;16636us;16637us;16638us;65535us;65535us;65535us;16639us;65535us;65535us;65535us;16640us;65535us;16641us;65535us;65535us;16642us;16643us;65535us;65535us;65535us;16649us;16652us;16653us;65535us;65535us;16654us;16655us;16656us;65535us;16658us;16659us;16660us;16661us;65535us;65535us;16662us;65535us;65535us;16663us;65535us;65535us;16664us;65535us;16666us;65535us;65535us;16671us;65535us;16675us;16676us;65535us;65535us;16677us;16678us;65535us;16679us;65535us;65535us;65535us;16680us;65535us;16682us;65535us;16683us;65535us;16684us;16685us;16686us;16687us;65535us;65535us;65535us;16688us;65535us;16689us;|]
let _fsyacc_reductions = lazy [|
# 948 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> SynExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startraw_expr));
# 957 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> ParsedFile in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startstart));
# 966 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_prog in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                   _1 
                   )
# 111 "Parser.fsy"
                 : ParsedFile));
# 977 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                      _1 
                   )
# 113 "Parser.fsy"
                 : SynExpr));
# 988 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_file_fragments in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Parser.fsy"
                               ParsedFile(_1) 
                   )
# 117 "Parser.fsy"
                 : 'gentype_prog));
# 999 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_file_fragments in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "Parser.fsy"
                                                          List.rev _1 
                   )
# 119 "Parser.fsy"
                 : 'gentype_file_fragments));
# 1010 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_file_fragment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                           [_1] 
                   )
# 121 "Parser.fsy"
                 : 'gentype_rev_file_fragments));
# 1021 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_file_fragments in
            let _2 = parseState.GetInput(2) :?> 'gentype_file_fragment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "Parser.fsy"
                                                              _2 :: _1 
                   )
# 122 "Parser.fsy"
                 : 'gentype_rev_file_fragments));
# 1033 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_module_decls in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "Parser.fsy"
                               ParsedFileFragment.AnonModule(_1, lhs parseState)
                   )
# 126 "Parser.fsy"
                 : 'gentype_file_fragment));
# 1044 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "Parser.fsy"
                               ParsedFileFragment.AnonModule([], lhs parseState) 
                   )
# 130 "Parser.fsy"
                 : 'gentype_file_fragment));
# 1054 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_module_decls in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Parser.fsy"
                                                                              List.rev _1 
                   )
# 132 "Parser.fsy"
                 : 'gentype_module_decls));
# 1065 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_module_decl in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Parser.fsy"
                                                                [_1] 
                   )
# 134 "Parser.fsy"
                 : 'gentype_rev_module_decls));
# 1076 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_module_decls in
            let _2 = parseState.GetInput(2) :?> 'gentype_module_decl in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "Parser.fsy"
                                                                                  _2 :: _1 
                   )
# 135 "Parser.fsy"
                 : 'gentype_rev_module_decls));
# 1088 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_module_parens in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "Parser.fsy"
                                           _1 
                   )
# 138 "Parser.fsy"
                 : 'gentype_module_decl));
# 1099 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "Parser.fsy"
                                  SynModuleDecl.Expr(_1, lhs parseState) 
                   )
# 139 "Parser.fsy"
                 : 'gentype_module_decl));
# 1110 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_module_help in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "Parser.fsy"
                                                       _2 
                   )
# 142 "Parser.fsy"
                 : 'gentype_module_parens));
# 1121 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "Parser.fsy"
                               SynModuleDecl.Open(_2, lhs parseState) 
                   )
# 146 "Parser.fsy"
                 : 'gentype_module_help));
# 1132 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_module_decls in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "Parser.fsy"
                               SynModuleDecl.NestedModule(_2, _3, lhs parseState) 
                   )
# 148 "Parser.fsy"
                 : 'gentype_module_help));
# 1144 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "Parser.fsy"
                                                List.rev _1 
                   )
# 150 "Parser.fsy"
                 : 'gentype_expr_list));
# 1155 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "Parser.fsy"
                                                  [_1] 
                   )
# 152 "Parser.fsy"
                 : 'gentype_rev_expr_list));
# 1166 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_expr_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "Parser.fsy"
                                                _2 :: _1 
                   )
# 153 "Parser.fsy"
                 : 'gentype_rev_expr_list));
# 1178 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "Parser.fsy"
                             [] 
                   )
# 156 "Parser.fsy"
                 : 'gentype_expr_list_or_empty));
# 1188 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Parser.fsy"
                                       _1 
                   )
# 157 "Parser.fsy"
                 : 'gentype_expr_list_or_empty));
# 1199 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Parser.fsy"
                                                   true 
                   )
# 160 "Parser.fsy"
                 : 'gentype_recover));
# 1209 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "Parser.fsy"
                                false 
                   )
# 161 "Parser.fsy"
                 : 'gentype_recover));
# 1219 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "Parser.fsy"
                                                          SynExpr.Const(fst _1, snd _1) 
                   )
# 164 "Parser.fsy"
                 : 'gentype_expr));
# 1230 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "Parser.fsy"
                                    SynExpr.Symbol(_1) 
                   )
# 165 "Parser.fsy"
                 : 'gentype_expr));
# 1241 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyword in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "Parser.fsy"
                                     SynExpr.Keyword(_1) 
                   )
# 166 "Parser.fsy"
                 : 'gentype_expr));
# 1252 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "Parser.fsy"
                                                        SynExpr.Deref(true, _2, lhs parseState) 
                   )
# 167 "Parser.fsy"
                 : 'gentype_expr));
# 1263 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_quoted_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Parser.fsy"
                               SynExpr.Quote(true, _2, lhs parseState) 
                   )
# 169 "Parser.fsy"
                 : 'gentype_expr));
# 1274 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list_or_empty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "Parser.fsy"
                               SynExpr.HashMap(_2, lhs parseState)
                   )
# 171 "Parser.fsy"
                 : 'gentype_expr));
# 1285 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list_or_empty in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "Parser.fsy"
                               SynExpr.HashSet(_2, lhs parseState)
                   )
# 173 "Parser.fsy"
                 : 'gentype_expr));
# 1296 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lambda_short_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "Parser.fsy"
                               SynExpr.LambdaShort(_2, lhs parseState)
                   )
# 175 "Parser.fsy"
                 : 'gentype_expr));
# 1307 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_vector_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "Parser.fsy"
                               _1 
                   )
# 177 "Parser.fsy"
                 : 'gentype_expr));
# 1318 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_inside_parens in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "Parser.fsy"
                                                            _1 
                   )
# 178 "Parser.fsy"
                 : 'gentype_expr));
# 1329 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_operators_not_in_parens in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "Parser.fsy"
                                                     SynExpr.Op(_1) 
                   )
# 181 "Parser.fsy"
                 : 'gentype_lambda_short_expr_list));
# 1340 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_call in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "Parser.fsy"
                                           _1 
                   )
# 182 "Parser.fsy"
                 : 'gentype_lambda_short_expr_list));
# 1351 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dot_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "Parser.fsy"
                                      _1 
                   )
# 183 "Parser.fsy"
                 : 'gentype_lambda_short_expr_list));
# 1362 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_new_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "Parser.fsy"
                                      _1 
                   )
# 184 "Parser.fsy"
                 : 'gentype_lambda_short_expr_list));
# 1373 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "Parser.fsy"
                                               SynExpr.Vector([], lhs parseState) 
                   )
# 187 "Parser.fsy"
                 : 'gentype_vector_start));
# 1383 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "Parser.fsy"
                               SynExpr.Vector(_2, lhs parseState) 
                   )
# 189 "Parser.fsy"
                 : 'gentype_vector_start));
# 1394 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "Parser.fsy"
                                          
                             SynExpr.Const (SynConst.Unit, lhs parseState)
                         
                   )
# 192 "Parser.fsy"
                 : 'gentype_inside_parens));
# 1406 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parens_expr_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "Parser.fsy"
                                                             _2 
                   )
# 195 "Parser.fsy"
                 : 'gentype_inside_parens));
# 1417 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_parens_expr_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "Parser.fsy"
                                                                             _2 
                   )
# 196 "Parser.fsy"
                 : 'gentype_inside_parens));
# 1428 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_recover in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "Parser.fsy"
                                                              
                             Syntax.parserRecoveryExpr (lhs parseState)
                         
                   )
# 199 "Parser.fsy"
                 : 'gentype_inside_parens));
# 1441 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_parens_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "Parser.fsy"
                                                               _1 
                   )
# 204 "Parser.fsy"
                 : 'gentype_parens_expr_start));
# 1452 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "Parser.fsy"
                               SynExpr.Pair(_1, _3, lhs parseState)
                   )
# 208 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1464 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_def in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "Parser.fsy"
                                                        _1 
                   )
# 209 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1475 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_macro_def in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "Parser.fsy"
                                       _1 
                   )
# 210 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1486 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_call in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "Parser.fsy"
                                                           _1 
                   )
# 211 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1497 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_let in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "Parser.fsy"
                                 _1 
                   )
# 212 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1508 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_letstar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "Parser.fsy"
                                     _1 
                   )
# 213 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1519 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_mut in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "Parser.fsy"
                                 _1 
                   )
# 214 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1530 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_set in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "Parser.fsy"
                                 _1 
                   )
# 215 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1541 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "Parser.fsy"
                                     _1 
                   )
# 216 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1552 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_type_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "Parser.fsy"
                                       _1 
                   )
# 217 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1563 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_for_in_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "Parser.fsy"
                                         _1 
                   )
# 218 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1574 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_range_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "Parser.fsy"
                                        _1 
                   )
# 219 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1585 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "Parser.fsy"
                                       _1 
                   )
# 220 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1596 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "Parser.fsy"
                                        _1 
                   )
# 221 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1607 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_new_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "Parser.fsy"
                                      _1 
                   )
# 222 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1618 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_cons_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "Parser.fsy"
                                       _1 
                   )
# 223 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1629 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_concat_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "Parser.fsy"
                                         _1 
                   )
# 224 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1640 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_operators_not_in_parens in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "Parser.fsy"
                                                     SynExpr.Op(_1) 
                   )
# 225 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1651 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_syntax_macro_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "Parser.fsy"
                                               _1 
                   )
# 226 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1662 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_macro_call_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "Parser.fsy"
                                             _1 
                   )
# 227 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1673 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_quoted_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "Parser.fsy"
                               SynExpr.Quote(false, _2, lhs parseState) 
                   )
# 229 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1684 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_quasiquoted_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "Parser.fsy"
                               SynExpr.Quasiquote(false, _2, lhs parseState) 
                   )
# 231 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1695 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "Parser.fsy"
                               SynExpr.Begin(_2, lhs parseState) 
                   )
# 233 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1706 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "Parser.fsy"
                               SynExpr.Begin(_2, lhs parseState) 
                   )
# 235 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1717 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dot_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "Parser.fsy"
                                      _1 
                   )
# 236 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1728 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "Parser.fsy"
                               SynExpr.Atom(_2, lhs parseState) 
                   )
# 238 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1739 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "Parser.fsy"
                               SynExpr.Deref(false, _2, lhs parseState) 
                   )
# 240 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1750 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "Parser.fsy"
                               SynExpr.While(_2, _3, lhs parseState) 
                   )
# 242 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1762 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "Parser.fsy"
                               SynExpr.ThreadFirst (_2, lhs parseState)
                   )
# 244 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1773 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_threadable_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "Parser.fsy"
                               SynExpr.ThreadLast (_2, lhs parseState)
                   )
# 246 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1784 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "Parser.fsy"
                                                                SynExpr.Tuple([], lhs parseState)
                   )
# 248 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1794 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "Parser.fsy"
                                                                          SynExpr.Tuple(_2, lhs parseState)
                   )
# 249 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1805 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "Parser.fsy"
                                      SynExpr.FsMap([], lhs parseState)
                   )
# 251 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1815 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "Parser.fsy"
                                                SynExpr.FsMap(_2, lhs parseState)
                   )
# 252 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1826 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "Parser.fsy"
                                      SynExpr.FsSet([], lhs parseState)
                   )
# 254 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1836 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "Parser.fsy"
                                                SynExpr.FsSet(_2, lhs parseState)
                   )
# 255 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1847 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "Parser.fsy"
                                        SynExpr.FsArray([], lhs parseState)
                   )
# 257 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1857 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "Parser.fsy"
                                                  SynExpr.FsArray(_2, lhs parseState)
                   )
# 258 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1868 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "Parser.fsy"
                                      SynExpr.FsVec([], lhs parseState)
                   )
# 260 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1878 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "Parser.fsy"
                                                SynExpr.FsVec(_2, lhs parseState)
                   )
# 261 "Parser.fsy"
                 : 'gentype_parens_expr));
# 1889 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_macro_call in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "Parser.fsy"
                                        SynExpr.SyntaxMacroCall(_1) 
                   )
# 264 "Parser.fsy"
                 : 'gentype_macro_call_expr));
# 1900 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_macro_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "Parser.fsy"
                               let mNameBody = SynMacroBody.Symbol(_1)
                               SynMacroCall(_1, mNameBody :: _2, lhs parseState) 
                   )
# 268 "Parser.fsy"
                 : 'gentype_macro_call));
# 1913 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_syntax_macro in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "Parser.fsy"
                                          SynExpr.SyntaxMacro(_1)
                   )
# 272 "Parser.fsy"
                 : 'gentype_syntax_macro_expr));
# 1924 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_macro_cases in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 "Parser.fsy"
                               SynMacro(_2, _3, lhs parseState )
                   )
# 276 "Parser.fsy"
                 : 'gentype_syntax_macro));
# 1936 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_macro_cases in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 "Parser.fsy"
                                                    List.rev _1 
                   )
# 278 "Parser.fsy"
                 : 'gentype_macro_cases));
# 1947 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_macro_case_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 "Parser.fsy"
                                              [_1] 
                   )
# 280 "Parser.fsy"
                 : 'gentype_rev_macro_cases));
# 1958 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_macro_cases in
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_case_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "Parser.fsy"
                                                              _2 :: _1 
                   )
# 281 "Parser.fsy"
                 : 'gentype_rev_macro_cases));
# 1970 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_case_pat in
            let _3 = parseState.GetInput(3) :?> 'gentype_macro_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 "Parser.fsy"
                               SynMacroCase(_2, _3, lhs parseState) 
                   )
# 285 "Parser.fsy"
                 : 'gentype_macro_case_start));
# 1982 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_case_pat in
            let _3 = parseState.GetInput(3) :?> 'gentype_macro_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 "Parser.fsy"
                               SynMacroCase(_2, _3, lhs parseState) 
                   )
# 287 "Parser.fsy"
                 : 'gentype_macro_case_start));
# 1994 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_pat_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 "Parser.fsy"
                                                          _2 
                   )
# 290 "Parser.fsy"
                 : 'gentype_macro_case_pat));
# 2005 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_pat_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "Parser.fsy"
                                                              _2 
                   )
# 291 "Parser.fsy"
                 : 'gentype_macro_case_pat));
# 2016 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_macro_pat_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 "Parser.fsy"
                                                          List.rev _1 
                   )
# 293 "Parser.fsy"
                 : 'gentype_macro_pat_list));
# 2027 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_macro_pat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 "Parser.fsy"
                                       [_1] 
                   )
# 295 "Parser.fsy"
                 : 'gentype_rev_macro_pat_list));
# 2038 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_macro_pat_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_pat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "Parser.fsy"
                                                          _2 :: _1 
                   )
# 296 "Parser.fsy"
                 : 'gentype_rev_macro_pat_list));
# 2050 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 "Parser.fsy"
                                      SynMacroPat.Const(fst _1, snd _1) 
                   )
# 299 "Parser.fsy"
                 : 'gentype_macro_pat));
# 2061 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_pat_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 300 "Parser.fsy"
                                                          SynMacroPat.List(_2, lhs parseState) 
                   )
# 300 "Parser.fsy"
                 : 'gentype_macro_pat));
# 2072 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_pat_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 301 "Parser.fsy"
                                                              SynMacroPat.List(_2, lhs parseState) 
                   )
# 301 "Parser.fsy"
                 : 'gentype_macro_pat));
# 2083 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 "Parser.fsy"
                                   
                             let text = _1
                             let symText = (Syntax.textOfSymbol text)
                             if (symText = "_") then
                                 SynMacroPat.Discard (lhs parseState)
                             else if (symText = "...") then
                                 SynMacroPat.Ellipsis (lhs parseState)
                             else
                                 SynMacroPat.Symbol (text, lhs parseState) 
                   )
# 302 "Parser.fsy"
                 : 'gentype_macro_pat));
# 2102 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_macro_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 "Parser.fsy"
                                                            List.rev _1 
                   )
# 312 "Parser.fsy"
                 : 'gentype_macro_body_list));
# 2113 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_macro_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 "Parser.fsy"
                                        [_1] 
                   )
# 314 "Parser.fsy"
                 : 'gentype_rev_macro_body_list));
# 2124 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_macro_body_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 "Parser.fsy"
                                                            _2 :: _1 
                   )
# 315 "Parser.fsy"
                 : 'gentype_rev_macro_body_list));
# 2136 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 "Parser.fsy"
                                      SynMacroBody.Const(fst _1, snd _1) 
                   )
# 318 "Parser.fsy"
                 : 'gentype_macro_body));
# 2147 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 "Parser.fsy"
                                                           SynMacroBody.List(_2, lhs parseState) 
                   )
# 319 "Parser.fsy"
                 : 'gentype_macro_body));
# 2158 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 "Parser.fsy"
                                                               SynMacroBody.Vector(_2, lhs parseState) 
                   )
# 320 "Parser.fsy"
                 : 'gentype_macro_body));
# 2169 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 "Parser.fsy"
                                                           SynMacroBody.HashMap(_2, lhs parseState) 
                   )
# 321 "Parser.fsy"
                 : 'gentype_macro_body));
# 2180 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_macro_body_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 "Parser.fsy"
                                                               SynMacroBody.HashSet(_2, lhs parseState) 
                   )
# 322 "Parser.fsy"
                 : 'gentype_macro_body));
# 2191 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyword in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 "Parser.fsy"
                                     SynMacroBody.Keyword(_1) 
                   )
# 323 "Parser.fsy"
                 : 'gentype_macro_body));
# 2202 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 "Parser.fsy"
                                   
                             let text = _1
                             let symText = (Syntax.textOfSymbol text)
                             if (symText = "_") then
                                 SynMacroBody.Discard (lhs parseState)
                             else if (symText = "...") then
                                 SynMacroBody.Ellipsis (lhs parseState)
                             else
                                 SynMacroBody.Symbol (text) 
                   )
# 324 "Parser.fsy"
                 : 'gentype_macro_body));
# 2221 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 336 "Parser.fsy"
                               SynExpr.Cons(_2, _3, lhs parseState)
                   )
# 336 "Parser.fsy"
                 : 'gentype_cons_expr));
# 2233 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 "Parser.fsy"
                               SynExpr.Cons(_2, Syntax.parserRecoveryExpr (lhs parseState), lhs parseState)
                   )
# 338 "Parser.fsy"
                 : 'gentype_cons_expr));
# 2244 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 "Parser.fsy"
                               SynExpr.Cons(Syntax.parserRecoveryExpr (lhs parseState), Syntax.parserRecoveryExpr (lhs parseState), lhs parseState)
                   )
# 340 "Parser.fsy"
                 : 'gentype_cons_expr));
# 2254 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 "Parser.fsy"
                               SynExpr.Concat(_2, _3, lhs parseState)
                   )
# 344 "Parser.fsy"
                 : 'gentype_concat_expr));
# 2266 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 "Parser.fsy"
                               SynExpr.Concat(_2, Syntax.parserRecoveryExpr (lhs parseState), lhs parseState)
                   )
# 346 "Parser.fsy"
                 : 'gentype_concat_expr));
# 2277 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 348 "Parser.fsy"
                               SynExpr.Concat(Syntax.parserRecoveryExpr (lhs parseState), Syntax.parserRecoveryExpr (lhs parseState), lhs parseState)
                   )
# 348 "Parser.fsy"
                 : 'gentype_concat_expr));
# 2287 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_syntype_ident in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 "Parser.fsy"
                               SynExpr.New(_2, [], lhs parseState) 
                   )
# 352 "Parser.fsy"
                 : 'gentype_new_expr));
# 2298 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_syntype_ident in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 "Parser.fsy"
                               SynExpr.New(_2, _3, lhs parseState) 
                   )
# 354 "Parser.fsy"
                 : 'gentype_new_expr));
# 2310 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_threadable_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 "Parser.fsy"
                                                            List.rev _1 
                   )
# 356 "Parser.fsy"
                 : 'gentype_threadable_list));
# 2321 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_threadable in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 "Parser.fsy"
                                        [_1] 
                   )
# 358 "Parser.fsy"
                 : 'gentype_rev_threadable_list));
# 2332 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_threadable_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_threadable in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 "Parser.fsy"
                                                            _2 :: _1 
                   )
# 359 "Parser.fsy"
                 : 'gentype_rev_threadable_list));
# 2344 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_prop_plus in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 "Parser.fsy"
                               SynThreadable.Property(_1, lhs parseState) 
                   )
# 363 "Parser.fsy"
                 : 'gentype_threadable));
# 2355 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dot_method in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 365 "Parser.fsy"
                               SynThreadable.Method(_1, lhs parseState) 
                   )
# 365 "Parser.fsy"
                 : 'gentype_threadable));
# 2366 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 "Parser.fsy"
                               SynThreadable.Index(_2, lhs parseState) 
                   )
# 367 "Parser.fsy"
                 : 'gentype_threadable));
# 2377 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 369 "Parser.fsy"
                               SynThreadable.Expr(_1, lhs parseState) 
                   )
# 369 "Parser.fsy"
                 : 'gentype_threadable));
# 2388 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 373 "Parser.fsy"
                              
                               let text = (_1).TrimStart('+')
                               SynSymbol(Ident(text, rhs parseState 1))
                             
                   )
# 373 "Parser.fsy"
                 : 'gentype_prop_plus));
# 2402 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 "Parser.fsy"
                               SynExpr.DotIndex(_4, _2, lhs parseState)
                   )
# 380 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2414 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 382 "Parser.fsy"
                               SynExpr.DotProperty(_3, _2, lhs parseState)
                   )
# 382 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2426 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_prop_plus in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 384 "Parser.fsy"
                               SynExpr.DotProperty(_2, _1, lhs parseState)
                   )
# 384 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2438 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dot_method in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 386 "Parser.fsy"
                               SynExpr.DotMethod(_2, _1, _3, lhs parseState) 
                   )
# 386 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2451 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_dot_method in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 388 "Parser.fsy"
                               SynExpr.DotMethod(_2, _1, [], lhs parseState) 
                   )
# 388 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2463 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 390 "Parser.fsy"
                              
                               let text = Syntax.textOfSymbol _3
                               if text.StartsWith('+') then
                                 SynExpr.DotProperty(_2, (_3).trimStart '+', lhs parseState)
                               else
                                 SynExpr.DotMethod(_2, _3, [], lhs parseState) 
                   )
# 390 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2480 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_prop_plus in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 397 "Parser.fsy"
                               SynExpr.DotProperty(_2, _3, lhs parseState) 
                   )
# 397 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2492 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 400 "Parser.fsy"
                               SynExpr.DotIndex(_2, _4, lhs parseState) 
                   )
# 400 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2504 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_symbol in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 402 "Parser.fsy"
                               SynExpr.DotMethod(_2, _3, _4, lhs parseState) 
                   )
# 402 "Parser.fsy"
                 : 'gentype_dot_expr));
# 2517 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 405 "Parser.fsy"
                                    () 
                   )
# 405 "Parser.fsy"
                 : 'gentype_lparen_or_lbracket));
# 2527 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 406 "Parser.fsy"
                                      () 
                   )
# 406 "Parser.fsy"
                 : 'gentype_lparen_or_lbracket));
# 2537 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 409 "Parser.fsy"
                                    () 
                   )
# 409 "Parser.fsy"
                 : 'gentype_rparen_or_rbracket));
# 2547 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 410 "Parser.fsy"
                                      () 
                   )
# 410 "Parser.fsy"
                 : 'gentype_rparen_or_rbracket));
# 2557 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 413 "Parser.fsy"
                                       SynExpr.List([], lhs parseState)
                   )
# 413 "Parser.fsy"
                 : 'gentype_list_expr));
# 2567 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 414 "Parser.fsy"
                                                 SynExpr.List(_2, lhs parseState)
                   )
# 414 "Parser.fsy"
                 : 'gentype_list_expr));
# 2578 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lparen_or_lbracket in
            let _3 = parseState.GetInput(3) :?> 'gentype_name in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_rparen_or_rbracket in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 418 "Parser.fsy"
                               SynExpr.ForIn(_3, _4, _6, lhs parseState) 
                   )
# 418 "Parser.fsy"
                 : 'gentype_for_in_expr));
# 2593 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 422 "Parser.fsy"
                               SynExpr.RangeExpr (_2, Some(_4), _6, lhs parseState) 
                   )
# 422 "Parser.fsy"
                 : 'gentype_range_expr));
# 2606 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 424 "Parser.fsy"
                               SynExpr.RangeExpr (_2, Some(_3), _4, lhs parseState) 
                   )
# 424 "Parser.fsy"
                 : 'gentype_range_expr));
# 2619 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 426 "Parser.fsy"
                               SynExpr.RangeExpr (_2, None, _4, lhs parseState) 
                   )
# 426 "Parser.fsy"
                 : 'gentype_range_expr));
# 2631 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 428 "Parser.fsy"
                               SynExpr.RangeExpr (_2, None, _3, lhs parseState) 
                   )
# 428 "Parser.fsy"
                 : 'gentype_range_expr));
# 2643 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 432 "Parser.fsy"
                               SynExpr.If(_2, _3, None, lhs parseState) 
                   )
# 432 "Parser.fsy"
                 : 'gentype_if_expr));
# 2655 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 434 "Parser.fsy"
                               SynExpr.If(_2, _3, Some _4, lhs parseState) 
                   )
# 434 "Parser.fsy"
                 : 'gentype_if_expr));
# 2668 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_quoted_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 436 "Parser.fsy"
                                                      List.rev _1 
                   )
# 436 "Parser.fsy"
                 : 'gentype_quoted_exprs));
# 2679 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_quoted_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 438 "Parser.fsy"
                                         [_1] 
                   )
# 438 "Parser.fsy"
                 : 'gentype_rev_quoted_exprs));
# 2690 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_quoted_exprs in
            let _2 = parseState.GetInput(2) :?> 'gentype_quoted_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 439 "Parser.fsy"
                                                          _2 :: _1 
                   )
# 439 "Parser.fsy"
                 : 'gentype_rev_quoted_exprs));
# 2702 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 442 "Parser.fsy"
                                      SynQuoted.Const(fst _1, snd _1) 
                   )
# 442 "Parser.fsy"
                 : 'gentype_quoted_expr));
# 2713 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 443 "Parser.fsy"
                                    SynQuoted.Symbol(_1) 
                   )
# 443 "Parser.fsy"
                 : 'gentype_quoted_expr));
# 2724 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyword in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 444 "Parser.fsy"
                                     SynQuoted.Keyword(_1) 
                   )
# 444 "Parser.fsy"
                 : 'gentype_quoted_expr));
# 2735 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_quoted_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 446 "Parser.fsy"
                               SynQuoted.List (_2, lhs parseState) 
                   )
# 446 "Parser.fsy"
                 : 'gentype_quoted_expr));
# 2746 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_quoted_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 448 "Parser.fsy"
                               SynQuoted.Vector (_2, lhs parseState) 
                   )
# 448 "Parser.fsy"
                 : 'gentype_quoted_expr));
# 2757 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_quoted_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 450 "Parser.fsy"
                               SynQuoted.HashMap (_2, lhs parseState) 
                   )
# 450 "Parser.fsy"
                 : 'gentype_quoted_expr));
# 2768 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_quoted_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 452 "Parser.fsy"
                               SynQuoted.HashSet (_2, lhs parseState) 
                   )
# 452 "Parser.fsy"
                 : 'gentype_quoted_expr));
# 2779 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_value_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 454 "Parser.fsy"
                                                    List.rev _1 
                   )
# 454 "Parser.fsy"
                 : 'gentype_value_exprs));
# 2790 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 456 "Parser.fsy"
                             [] 
                   )
# 456 "Parser.fsy"
                 : 'gentype_rev_value_exprs));
# 2800 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_value_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 457 "Parser.fsy"
                                        [_1] 
                   )
# 457 "Parser.fsy"
                 : 'gentype_rev_value_exprs));
# 2811 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_value_exprs in
            let _2 = parseState.GetInput(2) :?> 'gentype_value_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 458 "Parser.fsy"
                                                        _2 :: _1 
                   )
# 458 "Parser.fsy"
                 : 'gentype_rev_value_exprs));
# 2823 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 461 "Parser.fsy"
                                      SynValue.Const(fst _1, snd _1) 
                   )
# 461 "Parser.fsy"
                 : 'gentype_value_expr));
# 2834 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 462 "Parser.fsy"
                                    SynValue.Symbol(_1) 
                   )
# 462 "Parser.fsy"
                 : 'gentype_value_expr));
# 2845 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyword in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 463 "Parser.fsy"
                                     SynValue.Keyword(_1) 
                   )
# 463 "Parser.fsy"
                 : 'gentype_value_expr));
# 2856 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_value_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 465 "Parser.fsy"
                               SynValue.List (_2, lhs parseState) 
                   )
# 465 "Parser.fsy"
                 : 'gentype_value_expr));
# 2867 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_value_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 467 "Parser.fsy"
                               SynValue.Vector (_2, lhs parseState) 
                   )
# 467 "Parser.fsy"
                 : 'gentype_value_expr));
# 2878 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_value_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 469 "Parser.fsy"
                               SynValue.HashMap (_2, lhs parseState) 
                   )
# 469 "Parser.fsy"
                 : 'gentype_value_expr));
# 2889 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_value_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 471 "Parser.fsy"
                               SynValue.HashSet (_2, lhs parseState) 
                   )
# 471 "Parser.fsy"
                 : 'gentype_value_expr));
# 2900 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_quasiquoted_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 473 "Parser.fsy"
                                                                List.rev _1 
                   )
# 473 "Parser.fsy"
                 : 'gentype_quasiquoted_exprs));
# 2911 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_quasiquoted_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 475 "Parser.fsy"
                                              [_1] 
                   )
# 475 "Parser.fsy"
                 : 'gentype_rev_quasiquoted_exprs));
# 2922 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_quasiquoted_exprs in
            let _2 = parseState.GetInput(2) :?> 'gentype_quasiquoted_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 476 "Parser.fsy"
                                                                    _2 :: _1 
                   )
# 476 "Parser.fsy"
                 : 'gentype_rev_quasiquoted_exprs));
# 2934 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 479 "Parser.fsy"
                                      SynQuasiquote.Const(fst _1, snd _1) 
                   )
# 479 "Parser.fsy"
                 : 'gentype_quasiquoted_expr));
# 2945 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 480 "Parser.fsy"
                                    SynQuasiquote.Symbol(_1) 
                   )
# 480 "Parser.fsy"
                 : 'gentype_quasiquoted_expr));
# 2956 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyword in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 481 "Parser.fsy"
                                     SynQuasiquote.Keyword(_1) 
                   )
# 481 "Parser.fsy"
                 : 'gentype_quasiquoted_expr));
# 2967 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_operators in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 482 "Parser.fsy"
                                       SynQuasiquote.Op(_1) 
                   )
# 482 "Parser.fsy"
                 : 'gentype_quasiquoted_expr));
# 2978 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_unquote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 483 "Parser.fsy"
                                     _1 
                   )
# 483 "Parser.fsy"
                 : 'gentype_quasiquoted_expr));
# 2989 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_splice_unquote in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 484 "Parser.fsy"
                                            _1 
                   )
# 484 "Parser.fsy"
                 : 'gentype_quasiquoted_expr));
# 3000 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_quasiquoted_exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 486 "Parser.fsy"
                               SynQuasiquote.List (_2, lhs parseState) 
                   )
# 486 "Parser.fsy"
                 : 'gentype_quasiquoted_expr));
# 3011 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 490 "Parser.fsy"
                               SynQuasiquote.Unquote (_3, lhs parseState)
                   )
# 490 "Parser.fsy"
                 : 'gentype_unquote));
# 3022 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 494 "Parser.fsy"
                               SynQuasiquote.SpliceUnquote (_3, lhs parseState)
                   )
# 494 "Parser.fsy"
                 : 'gentype_splice_unquote));
# 3033 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_operators_not_in_parens in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 "Parser.fsy"
                                                                   _2 
                   )
# 497 "Parser.fsy"
                 : 'gentype_operators));
# 3044 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 "Parser.fsy"
                               SynOp.Plus([], lhs parseState)
                   )
# 501 "Parser.fsy"
                 : 'gentype_operators_not_in_parens));
# 3054 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 503 "Parser.fsy"
                               SynOp.Mult([], lhs parseState)
                   )
# 503 "Parser.fsy"
                 : 'gentype_operators_not_in_parens));
# 3064 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 505 "Parser.fsy"
                               SynOp.Plus(_2, lhs parseState)
                   )
# 505 "Parser.fsy"
                 : 'gentype_operators_not_in_parens));
# 3075 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 507 "Parser.fsy"
                               SynOp.Mult(_2, lhs parseState)
                   )
# 507 "Parser.fsy"
                 : 'gentype_operators_not_in_parens));
# 3086 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 509 "Parser.fsy"
                               SynOp.Minus(_2, lhs parseState)
                   )
# 509 "Parser.fsy"
                 : 'gentype_operators_not_in_parens));
# 3097 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 511 "Parser.fsy"
                               SynOp.Div(_2, lhs parseState)
                   )
# 511 "Parser.fsy"
                 : 'gentype_operators_not_in_parens));
# 3108 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 515 "Parser.fsy"
                               SynExpr.Set(_2, _3, lhs parseState) 
                   )
# 515 "Parser.fsy"
                 : 'gentype_set));
# 3120 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 518 "Parser.fsy"
                               let r = lhs parseState
                               SynExpr.Set(_2, Syntax.parserRecoveryExpr r, r) 
                   )
# 518 "Parser.fsy"
                 : 'gentype_set));
# 3132 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 "Parser.fsy"
                               let r = lhs parseState
                               SynExpr.Set(Syntax.parserRecoveryExpr r, Syntax.parserRecoveryExpr r, r) 
                   )
# 522 "Parser.fsy"
                 : 'gentype_set));
# 3143 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 "Parser.fsy"
                               SynExpr.SimpleLet(_2, _3, lhs parseState) 
                   )
# 527 "Parser.fsy"
                 : 'gentype_let));
# 3155 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 530 "Parser.fsy"
                               let r = lhs parseState
                               SynExpr.SimpleLet(_2, Syntax.parserRecoveryExpr r, r) 
                   )
# 530 "Parser.fsy"
                 : 'gentype_let));
# 3167 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 "Parser.fsy"
                               let r = lhs parseState
                               SynExpr.SimpleLet(Syntax.parserRecoveryName r, Syntax.parserRecoveryExpr r, r) 
                   )
# 534 "Parser.fsy"
                 : 'gentype_let));
# 3178 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 539 "Parser.fsy"
                               SynExpr.SimpleMut(_2, _3, lhs parseState) 
                   )
# 539 "Parser.fsy"
                 : 'gentype_mut));
# 3190 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 542 "Parser.fsy"
                               let r = lhs parseState
                               SynExpr.SimpleMut(_2, Syntax.parserRecoveryExpr r, r) 
                   )
# 542 "Parser.fsy"
                 : 'gentype_mut));
# 3202 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 546 "Parser.fsy"
                               let r = lhs parseState
                               SynExpr.SimpleMut(Syntax.parserRecoveryName r, Syntax.parserRecoveryExpr r, r) 
                   )
# 546 "Parser.fsy"
                 : 'gentype_mut));
# 3213 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_binding_list_start in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 551 "Parser.fsy"
                               SynExpr.LetStar(_2, _3, lhs parseState) 
                   )
# 551 "Parser.fsy"
                 : 'gentype_letstar));
# 3225 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_name_list_start in
            let _4 = parseState.GetInput(4) :?> 'gentype_member_list_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 555 "Parser.fsy"
                               SynExpr.Type(_2, _3, _4, lhs parseState) 
                   )
# 555 "Parser.fsy"
                 : 'gentype_type_expr));
# 3238 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 558 "Parser.fsy"
                             [] 
                   )
# 558 "Parser.fsy"
                 : 'gentype_member_list_start));
# 3248 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_member_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 559 "Parser.fsy"
                                         _1 
                   )
# 559 "Parser.fsy"
                 : 'gentype_member_list_start));
# 3259 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_member_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 561 "Parser.fsy"
                                                    List.rev _1 
                   )
# 561 "Parser.fsy"
                 : 'gentype_member_list));
# 3270 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_member in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 "Parser.fsy"
                                                      [_1] 
                   )
# 563 "Parser.fsy"
                 : 'gentype_rev_member_list));
# 3281 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_member_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_member in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 564 "Parser.fsy"
                                                    _2 :: _1 
                   )
# 564 "Parser.fsy"
                 : 'gentype_rev_member_list));
# 3293 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_member_in_parens in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 567 "Parser.fsy"
                                                            _2 
                   )
# 567 "Parser.fsy"
                 : 'gentype_member));
# 3304 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 571 "Parser.fsy"
                               SynTypeMember.Let(_2, _3, lhs parseState) 
                   )
# 571 "Parser.fsy"
                 : 'gentype_member_in_parens));
# 3316 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "Parser.fsy"
                               SynTypeMember.Member(_2, _3, lhs parseState) 
                   )
# 573 "Parser.fsy"
                 : 'gentype_member_in_parens));
# 3328 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_arg_list_start in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 575 "Parser.fsy"
                               SynTypeMember.MemberFn(_2, _3, _4, (lhs parseState)) 
                   )
# 575 "Parser.fsy"
                 : 'gentype_member_in_parens));
# 3341 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_symbol in
            let _4 = parseState.GetInput(4) :?> 'gentype_arg_list_start in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 577 "Parser.fsy"
                               SynTypeMember.MemberFn(_3, _4, _5, (lhs parseState)) 
                   )
# 577 "Parser.fsy"
                 : 'gentype_member_in_parens));
# 3354 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 579 "Parser.fsy"
                               SynTypeMember.OverrideMember(_2, _3, lhs parseState) 
                   )
# 579 "Parser.fsy"
                 : 'gentype_member_in_parens));
# 3366 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_symbol in
            let _4 = parseState.GetInput(4) :?> 'gentype_arg_list_start in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 581 "Parser.fsy"
                               SynTypeMember.OverrideFn(_3, _4, _5, (lhs parseState)) 
                   )
# 581 "Parser.fsy"
                 : 'gentype_member_in_parens));
# 3379 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 584 "Parser.fsy"
                                    () 
                   )
# 584 "Parser.fsy"
                 : 'gentype_tok_lparen));
# 3389 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 587 "Parser.fsy"
                                           [] 
                   )
# 587 "Parser.fsy"
                 : 'gentype_empty_bindings));
# 3399 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 588 "Parser.fsy"
                                               [] 
                   )
# 588 "Parser.fsy"
                 : 'gentype_empty_bindings));
# 3409 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_empty_bindings in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 591 "Parser.fsy"
                                            _1 
                   )
# 591 "Parser.fsy"
                 : 'gentype_binding_list_start));
# 3420 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_binding_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 592 "Parser.fsy"
                                                        _2 
                   )
# 592 "Parser.fsy"
                 : 'gentype_binding_list_start));
# 3431 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_binding_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 593 "Parser.fsy"
                                                            _2 
                   )
# 593 "Parser.fsy"
                 : 'gentype_binding_list_start));
# 3442 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_binding_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 595 "Parser.fsy"
                                                      List.rev _1 
                   )
# 595 "Parser.fsy"
                 : 'gentype_binding_list));
# 3453 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_binding in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 597 "Parser.fsy"
                                                        [_1] 
                   )
# 597 "Parser.fsy"
                 : 'gentype_rev_binding_list));
# 3464 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_binding_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_binding in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 598 "Parser.fsy"
                                                      _2 :: _1 
                   )
# 598 "Parser.fsy"
                 : 'gentype_rev_binding_list));
# 3476 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 601 "Parser.fsy"
                                       SynBinding(_1, _2, lhs parseState) 
                   )
# 601 "Parser.fsy"
                 : 'gentype_binding));
# 3488 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 604 "Parser.fsy"
                                    SynName.Inferred(_1, lhs parseState) 
                   )
# 604 "Parser.fsy"
                 : 'gentype_name));
# 3499 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name_in_parens_or_brackets_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 605 "Parser.fsy"
                                                              _1 
                   )
# 605 "Parser.fsy"
                 : 'gentype_name));
# 3510 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_in_parens_or_brackets in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 608 "Parser.fsy"
                                                                      _2 
                   )
# 608 "Parser.fsy"
                 : 'gentype_name_in_parens_or_brackets_start));
# 3521 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_in_parens_or_brackets in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 609 "Parser.fsy"
                                                                          _2 
                   )
# 609 "Parser.fsy"
                 : 'gentype_name_in_parens_or_brackets_start));
# 3532 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_syntype_ident in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 613 "Parser.fsy"
                               SynName.Typed(_1, _3, lhs parseState) 
                   )
# 613 "Parser.fsy"
                 : 'gentype_name_in_parens_or_brackets));
# 3544 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 615 "Parser.fsy"
                               SynName.Inferred(_1, lhs parseState) 
                   )
# 615 "Parser.fsy"
                 : 'gentype_name_in_parens_or_brackets));
# 3555 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 618 "Parser.fsy"
                                           [] 
                   )
# 618 "Parser.fsy"
                 : 'gentype_empty_name_list));
# 3565 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 619 "Parser.fsy"
                                               [] 
                   )
# 619 "Parser.fsy"
                 : 'gentype_empty_name_list));
# 3575 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_empty_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 622 "Parser.fsy"
                                             _1 
                   )
# 622 "Parser.fsy"
                 : 'gentype_name_list_start));
# 3586 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 623 "Parser.fsy"
                                                     _2 
                   )
# 623 "Parser.fsy"
                 : 'gentype_name_list_start));
# 3597 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 624 "Parser.fsy"
                                                         _2 
                   )
# 624 "Parser.fsy"
                 : 'gentype_name_list_start));
# 3608 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_name_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 626 "Parser.fsy"
                                                List.rev _1 
                   )
# 626 "Parser.fsy"
                 : 'gentype_name_list));
# 3619 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 628 "Parser.fsy"
                                                  [_1] 
                   )
# 628 "Parser.fsy"
                 : 'gentype_rev_name_list));
# 3630 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_name_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_name in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 629 "Parser.fsy"
                                                _2 :: _1 
                   )
# 629 "Parser.fsy"
                 : 'gentype_rev_name_list));
# 3642 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 633 "Parser.fsy"
                               let text = _1
                               SynSymbol(Ident(text, lhs parseState))
                             
                   )
# 633 "Parser.fsy"
                 : 'gentype_symbol));
# 3655 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 639 "Parser.fsy"
                               let text = _1
                               SynSymbol(Ident(text, lhs parseState))
                             
                   )
# 639 "Parser.fsy"
                 : 'gentype_macro_name));
# 3668 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 645 "Parser.fsy"
                               let text = _1
                               SynSymbol(Ident(text.TrimStart '.', lhs parseState))
                             
                   )
# 645 "Parser.fsy"
                 : 'gentype_dot_method));
# 3681 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 651 "Parser.fsy"
                               let text = _1
                               SynKeyword(Ident(text, lhs parseState))
                             
                   )
# 651 "Parser.fsy"
                 : 'gentype_keyword));
# 3694 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 657 "Parser.fsy"
                               let text = _1
                               SynType.Ident(Ident(text, lhs parseState))
                             
                   )
# 657 "Parser.fsy"
                 : 'gentype_syntype_ident));
# 3707 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 661 "Parser.fsy"
                               let text = _2
                               SynType.Ident(Ident("'" + text, lhs parseState))
                             
                   )
# 661 "Parser.fsy"
                 : 'gentype_syntype_ident));
# 3720 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rawConstant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 666 "Parser.fsy"
                                         (_1, (rhs parseState 1))
                   )
# 666 "Parser.fsy"
                 : 'gentype_constant));
# 3731 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string * SynStringKind * ParseHelpers.LexerContinuation in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 670 "Parser.fsy"
                               let (raw, kind, _) = _1
                               SynConst.String(raw, kind, (lhs parseState))
                   )
# 670 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3743 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> decimal in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 672 "Parser.fsy"
                                     SynConst.Decimal(_1)
                   )
# 672 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3754 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 673 "Parser.fsy"
                                   SynConst.Int32(_1)
                   )
# 673 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3765 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int64 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 674 "Parser.fsy"
                                   SynConst.Int64(_1)
                   )
# 674 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3776 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 675 "Parser.fsy"
                                  SynConst.Bool(true)
                   )
# 675 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3786 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 676 "Parser.fsy"
                                   SynConst.Bool(false)
                   )
# 676 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3796 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 677 "Parser.fsy"
                                 SynConst.Nil 
                   )
# 677 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3806 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 678 "Parser.fsy"
                                  SynConst.Unit 
                   )
# 678 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3816 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 680 "Parser.fsy"
                               let text = _1
                               SynConst.Char(parseChar text) 
                   )
# 680 "Parser.fsy"
                 : 'gentype_rawConstant));
# 3828 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_arg_list_start in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 685 "Parser.fsy"
                               SynExpr.FunctionDef(_2, false, _3, _4, (lhs parseState)) 
                   )
# 685 "Parser.fsy"
                 : 'gentype_function_def));
# 3841 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_symbol in
            let _4 = parseState.GetInput(4) :?> 'gentype_arg_list_start in
            let _5 = parseState.GetInput(5) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 687 "Parser.fsy"
                               SynExpr.FunctionDef(_3, true, _4, _5, (lhs parseState)) 
                   )
# 687 "Parser.fsy"
                 : 'gentype_function_def));
# 3854 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_arg_list_start in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 689 "Parser.fsy"
                               SynExpr.LambdaDef(SynLambda(_2, _3, (lhs parseState))) 
                   )
# 689 "Parser.fsy"
                 : 'gentype_function_def));
# 3866 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_arg_list_start in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 691 "Parser.fsy"
                               SynExpr.LambdaDef(SynLambda(_2, _3, (lhs parseState))) 
                   )
# 691 "Parser.fsy"
                 : 'gentype_function_def));
# 3878 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_invalid_function_def in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 692 "Parser.fsy"
                                                                        _1 
                   )
# 692 "Parser.fsy"
                 : 'gentype_function_def));
# 3889 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 697 "Parser.fsy"
                               SynExpr.LambdaDef(SynLambda([], [], (lhs parseState))) 
                   )
# 697 "Parser.fsy"
                 : 'gentype_invalid_function_def));
# 3899 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 700 "Parser.fsy"
                               SynExpr.FunctionDef(_2, false, [], [], lhs parseState) 
                   )
# 700 "Parser.fsy"
                 : 'gentype_invalid_function_def));
# 3910 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_arg_list_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 703 "Parser.fsy"
                               SynExpr.LambdaDef(SynLambda([], [], (lhs parseState))) 
                   )
# 703 "Parser.fsy"
                 : 'gentype_invalid_function_def));
# 3921 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_arg_list_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 706 "Parser.fsy"
                               SynExpr.FunctionDef(_2, false, _3, [], (lhs parseState)) 
                   )
# 706 "Parser.fsy"
                 : 'gentype_invalid_function_def));
# 3933 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_symbol in
            let _4 = parseState.GetInput(4) :?> 'gentype_arg_list_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 708 "Parser.fsy"
                               SynExpr.FunctionDef(_3, true, _4, [], (lhs parseState)) 
                   )
# 708 "Parser.fsy"
                 : 'gentype_invalid_function_def));
# 3945 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_arg_list_start in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 712 "Parser.fsy"
                               SynExpr.MacroDef(_2, _3, _4, (lhs parseState)) 
                   )
# 712 "Parser.fsy"
                 : 'gentype_macro_def));
# 3958 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 715 "Parser.fsy"
                                           [] 
                   )
# 715 "Parser.fsy"
                 : 'gentype_empty_arg_list));
# 3968 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 716 "Parser.fsy"
                                               [] 
                   )
# 716 "Parser.fsy"
                 : 'gentype_empty_arg_list));
# 3978 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 719 "Parser.fsy"
                                           [] 
                   )
# 719 "Parser.fsy"
                 : 'gentype_arg_list_start));
# 3988 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 720 "Parser.fsy"
                                               [] 
                   )
# 720 "Parser.fsy"
                 : 'gentype_arg_list_start));
# 3998 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lparen_or_lbracket in
            let _2 = parseState.GetInput(2) :?> 'gentype_arg_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_rparen_or_rbracket in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 721 "Parser.fsy"
                                                                            _2 
                   )
# 721 "Parser.fsy"
                 : 'gentype_arg_list_start));
# 4011 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lparen_or_lbracket in
            let _2 = parseState.GetInput(2) :?> 'gentype_recover in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 722 "Parser.fsy"
                                                                           [] 
                   )
# 722 "Parser.fsy"
                 : 'gentype_arg_list_start));
# 4023 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_recover in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 723 "Parser.fsy"
                                                        [] 
                   )
# 723 "Parser.fsy"
                 : 'gentype_arg_list_start));
# 4034 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_arg_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 725 "Parser.fsy"
                                              List.rev _1 
                   )
# 725 "Parser.fsy"
                 : 'gentype_arg_list));
# 4045 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_arg in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 727 "Parser.fsy"
                                                [_1] 
                   )
# 727 "Parser.fsy"
                 : 'gentype_rev_arg_list));
# 4056 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_arg_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_arg in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 728 "Parser.fsy"
                                              _2 :: _1 
                   )
# 728 "Parser.fsy"
                 : 'gentype_rev_arg_list));
# 4068 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 731 "Parser.fsy"
                                    InferredArg(_1, lhs parseState) 
                   )
# 731 "Parser.fsy"
                 : 'gentype_arg));
# 4079 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_arg_in_parens_or_brackets_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 732 "Parser.fsy"
                                                             _1 
                   )
# 732 "Parser.fsy"
                 : 'gentype_arg));
# 4090 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_arg_in_parens_or_brackets in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 735 "Parser.fsy"
                                                                     _2 
                   )
# 735 "Parser.fsy"
                 : 'gentype_arg_in_parens_or_brackets_start));
# 4101 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_arg_in_parens_or_brackets in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 736 "Parser.fsy"
                                                                         _2 
                   )
# 736 "Parser.fsy"
                 : 'gentype_arg_in_parens_or_brackets_start));
# 4112 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            let _3 = parseState.GetInput(3) :?> 'gentype_syntype_ident in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 740 "Parser.fsy"
                               TypedArg(_1, _3, lhs parseState) 
                   )
# 740 "Parser.fsy"
                 : 'gentype_arg_in_parens_or_brackets));
# 4124 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 742 "Parser.fsy"
                               InferredArg(_1, lhs parseState) 
                   )
# 742 "Parser.fsy"
                 : 'gentype_arg_in_parens_or_brackets));
# 4135 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 745 "Parser.fsy"
                                            SynExpr.FunctionCall(_1, _2, (lhs parseState))
                   )
# 745 "Parser.fsy"
                 : 'gentype_function_call));
# 4147 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 746 "Parser.fsy"
                                  SynExpr.FunctionCall(_1, [], (lhs parseState))
                   )
# 746 "Parser.fsy"
                 : 'gentype_function_call));
# 4158 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_empty_call_args in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 749 "Parser.fsy"
                                             _1 
                   )
# 749 "Parser.fsy"
                 : 'gentype_function_call_args));
# 4169 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 750 "Parser.fsy"
                                       _1 
                   )
# 750 "Parser.fsy"
                 : 'gentype_function_call_args));
# 4180 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 753 "Parser.fsy"
                             [] 
                   )
# 753 "Parser.fsy"
                 : 'gentype_empty_call_args));
# 4190 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_match_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 757 "Parser.fsy"
                               SynExpr.Match (_2, _3, lhs parseState)
                   )
# 757 "Parser.fsy"
                 : 'gentype_match_expr));
# 4202 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 760 "Parser.fsy"
                               let r = lhs parseState;
                               SynExpr.Match (_2, [], r)
                   )
# 760 "Parser.fsy"
                 : 'gentype_match_expr));
# 4214 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 764 "Parser.fsy"
                               let r = lhs parseState;
                               SynExpr.Match (Syntax.parserRecoveryExpr r, [], r)
                   )
# 764 "Parser.fsy"
                 : 'gentype_match_expr));
# 4225 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_match_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 767 "Parser.fsy"
                                                  List.rev _1 
                   )
# 767 "Parser.fsy"
                 : 'gentype_match_list));
# 4236 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 769 "Parser.fsy"
                                         [_1] 
                   )
# 769 "Parser.fsy"
                 : 'gentype_rev_match_list));
# 4247 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_match_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_start in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 770 "Parser.fsy"
                                                        _2 :: _1 
                   )
# 770 "Parser.fsy"
                 : 'gentype_rev_match_list));
# 4259 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lparen_or_lbracket in
            let _2 = parseState.GetInput(2) :?> 'gentype_match in
            let _3 = parseState.GetInput(3) :?> 'gentype_rparen_or_rbracket in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 773 "Parser.fsy"
                                                                         _2 
                   )
# 773 "Parser.fsy"
                 : 'gentype_match_start));
# 4272 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lparen_or_lbracket in
            let _2 = parseState.GetInput(2) :?> 'gentype_rparen_or_rbracket in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 775 "Parser.fsy"
                                                                  
                             Syntax.parserRecoveryMatch (lhs parseState)
                          
                   )
# 775 "Parser.fsy"
                 : 'gentype_match_start));
# 4286 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_pattern in
            let _2 = parseState.GetInput(2) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 781 "Parser.fsy"
                               SynMatch.SynMatch(_1, None, _2, lhs parseState) 
                   )
# 781 "Parser.fsy"
                 : 'gentype_match));
# 4298 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_pattern in
            let _4 = parseState.GetInput(4) :?> 'gentype_expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 784 "Parser.fsy"
                               SynMatch.SynMatch(_1, Some(_4), _6, lhs parseState) 
                   )
# 784 "Parser.fsy"
                 : 'gentype_match));
# 4311 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_match_tuple_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 786 "Parser.fsy"
                                                                                          List.rev _1 
                   )
# 786 "Parser.fsy"
                 : 'gentype_match_tuple_list));
# 4322 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_match_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 788 "Parser.fsy"
                                                                    [_1] 
                   )
# 788 "Parser.fsy"
                 : 'gentype_rev_match_tuple_list));
# 4333 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_match_tuple_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_match_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 789 "Parser.fsy"
                                                                                                  _3 :: (SynMatchPattern.CommaOrDot (rhs parseState 2)) :: _1 
                   )
# 789 "Parser.fsy"
                 : 'gentype_rev_match_tuple_list));
# 4345 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_match_tuple_list in
            let _3 = parseState.GetInput(3) :?> 'gentype_match_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 790 "Parser.fsy"
                                                                                                _3 :: (SynMatchPattern.CommaOrDot (rhs parseState 2)) :: _1 
                   )
# 790 "Parser.fsy"
                 : 'gentype_rev_match_tuple_list));
# 4357 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_match_tuple_list in
            let _2 = parseState.GetInput(2) :?> 'gentype_match_pattern in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 791 "Parser.fsy"
                                                                                            _2 :: _1 
                   )
# 791 "Parser.fsy"
                 : 'gentype_rev_match_tuple_list));
# 4369 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_constant in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 794 "Parser.fsy"
                                                                     SynMatchPattern.Const(fst _1, snd _1) 
                   )
# 794 "Parser.fsy"
                 : 'gentype_match_pattern));
# 4380 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_symbol in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 795 "Parser.fsy"
                                   
                             let text = _1
                             if ((Syntax.textOfSymbol text) = "_") then
                                 SynMatchPattern.Discard (lhs parseState)
                             else
                                 SynMatchPattern.Symbol (text, lhs parseState) 
                   )
# 795 "Parser.fsy"
                 : 'gentype_match_pattern));
# 4396 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_match_tuple_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 802 "Parser.fsy"
                               SynMatchPattern.Tuple (Syntax.withoutCommaOrDots _3, lhs parseState) 
                   )
# 802 "Parser.fsy"
                 : 'gentype_match_pattern));
# 4407 "Syntax\\FsLexYaccOutput\\Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_match_tuple_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 804 "Parser.fsy"
                              
                                 let items = _2
                                 let without = Syntax.withoutCommaOrDots items
                                 if items.Length <> without.Length then
                                     SynMatchPattern.Tuple (without, lhs parseState)
                                 else
                                     SynMatchPattern.List (without, lhs parseState)
                             
                   )
# 804 "Parser.fsy"
                 : 'gentype_match_pattern));
|]
# 4426 "Syntax\\FsLexYaccOutput\\Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 79;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let raw_expr lexer lexbuf : SynExpr =
    engine lexer lexbuf 0 :?> _
let start lexer lexbuf : ParsedFile =
    engine lexer lexbuf 2 :?> _
